window.searchIndex = {"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":7,".":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":2,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"2":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{},"df":0,"2":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"5":{"docs":{},"df":0,"4":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}},"2":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"5":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}},"3":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}},"4":{"docs":{},"df":0,"5":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}},"6":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,"?":{"docs":{},"df":0,"}":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}},"1":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979}},"df":7,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1},"7":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951}},"df":1}}},"0":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1},"2":{"docs":{},"df":0,"3":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772}},"df":1},"7":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"/":{"docs":{},"df":0,"8":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}}},"6":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":1},"7":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1},"3":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}}}}}}},"3":{"docs":{},"df":0,"8":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}},"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"8":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}},"9":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"/":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}},"4":{"docs":{},"df":0,"d":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"d":{"docs":{},"df":0,"7":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}},"]":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"8":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"2":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":11,".":{"docs":{},"df":0,"7":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"0":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"1":{"docs":{},"df":0,"8":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}},"2":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}},"5":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"0":{"docs":{},"df":0,"c":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"d":{"docs":{},"df":0,"5":{"docs":{},"df":0,"e":{"docs":{},"df":0,"5":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"4":{"docs":{},"df":0,"d":{"docs":{},"df":0,"9":{"docs":{},"df":0,"2":{"docs":{},"df":0,"c":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"9":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"8":{"docs":{},"df":0,"6":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"8":{"docs":{},"df":0,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"5":{"docs":{},"df":0,"5":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{},"df":0,"7":{"docs":{},"df":0,"4":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,"a":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{},"df":0,"a":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"7":{"docs":{},"df":0,"6":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,"c":{"docs":{},"df":0,"9":{"docs":{},"df":0,"f":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"3":{"docs":{},"df":0,"8":{"docs":{},"df":0,"6":{"docs":{},"df":0,"f":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,"8":{"docs":{},"df":0,"a":{"docs":{},"df":0,"6":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}},"3":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":10,"0":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"4":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"0":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"6":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}},"6":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"5":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"4":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}},"7":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"4":{"docs":{},"df":0,"6":{"docs":{},"df":0,"3":{"docs":{},"df":0,"1":{"docs":{},"df":0,"e":{"docs":{},"df":0,"9":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}}}}}}},"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"/":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}},"9":{"docs":{},"df":0,"0":{"docs":{},"df":0,"x":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"a":{"docs":{},"df":0,"3":{"docs":{},"df":0,"d":{"docs":{},"df":0,"0":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{},"df":0,"8":{"docs":{},"df":0,"9":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":4.123105625617661},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5,"@":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.449489742783178}},"df":1}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"@":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.6457513110645907}},"df":1}}}}}}}}}}}}}}}}},"v":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}}}}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.7320508075688772}},"df":9,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}}},"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.47213595499958}},"df":3}}}}},"j":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}},"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":5}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":9}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}},"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":2.449489742783178},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":3},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":1}}},"y":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":2}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":8}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":3.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3},"k":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0}},"df":1},"p":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907}},"df":1,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":2}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":4}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.123105625617661}},"df":3,"1":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1},"2":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1},"3":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}},".":{"docs":{},"df":0,"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.69041575982343},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":5,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":8}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":2}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1},"1":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1},"2":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1},"3":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3}},"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.69041575982343}},"df":1,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":3.3166247903554},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795}},"df":2}}}}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}}},"o":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":1,"m":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2}}}},"w":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1}},"y":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}}}}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.605551275463989}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"g":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":10},"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7}}},"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772}},"df":2}},"e":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":9,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":10}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4,"n":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":3}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}},"g":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":1}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907}},"df":3}}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":2,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0}},"df":1,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.872983346207417}},"df":1}},"g":{"docs":{"https://tjtelan.com/":{"tf":1.0},"https://tjtelan.com/about/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":6}}},"o":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772}},"df":1}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178}},"df":1}}}},"t":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":1,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":8},"t":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":2.23606797749979}},"df":1}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":3}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"x":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":3.605551275463989}},"df":1}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":7,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.7320508075688772}},"df":2}},"e":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.449489742783178}},"df":1}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":2}}}}}},"s":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}}}}}}}}},"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":3.7416573867739413},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.69041575982343},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979}},"df":10,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":1}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":1}}}}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":4.0}},"df":2,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"w":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.3166247903554}},"df":1},"y":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3}}}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.8284271247461903}},"df":1}}},"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951}},"df":1}}}}},"c":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}},"4":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1},":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.449489742783178},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.58257569495584},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":9}},"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":2,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":3.1622776601683795}},"df":2}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":3.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.47213595499958},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":7,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.3166247903554},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951}},"df":1}}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2,"b":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"2":{"docs":{},"df":0,"2":{"docs":{},"df":0,"a":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"a":{"docs":{},"df":0,"6":{"docs":{},"df":0,"3":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772}},"df":1}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":1,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":8},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}}},"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.449489742783178}},"df":1}}}}},"f":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":2}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":5}},"o":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":5.744562646538029},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.0}},"df":4,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":6.164414002968976},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.4641016151377544}},"df":4,"'":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":1}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":4}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":6.244997998398398},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":5.196152422706632},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907},"https://tjtelan.com/now/":{"tf":1.0}},"df":12,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4}}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":3},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":5}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":4.58257569495584},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":6.244997998398398},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":8.660254037844387},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":12,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.0}},"df":1,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}},"[":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":2}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":7}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.449489742783178},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.123105625617661},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":4}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":5},"x":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3}}},"o":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.605551275463989},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.0}},"df":1}}}},"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.3166247903554}},"df":1}}}}}}}}}}}},"2":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.3166247903554}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":2.0}},"df":1}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"s":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.23606797749979},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":8}}},"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":5},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.3166247903554},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3}},"x":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":5}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":5},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.8284271247461903}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.69041575982343}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4},"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":4}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}},"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":5}}}},"p":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":2.449489742783178},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":2.23606797749979},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":4.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.3166247903554},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":11,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"d":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2}}},"v":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.8284271247461903}},"df":4}}}},"t":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"]":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.8284271247461903}},"df":3,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"%":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.23606797749979}},"df":1,":":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"r":{"docs":{},"df":0,"x":{"docs":{},"df":0,"v":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907}},"df":4,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.47213595499958}},"df":1}}}},"e":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}},"b":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.4641016151377544}},"df":1,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.3166247903554},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":4,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":3}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":2}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"f":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":12,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":7,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":2}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":4.0}},"df":2}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178}},"df":3,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544}},"df":1}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,",":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,",":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4},"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979}},"df":2,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":4}},"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}},"k":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":6}}}},"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/about/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":7}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907}},"df":2}},"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}}},"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":3}},"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":5.291502622129181}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.449489742783178},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":12}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":2}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951}},"df":2}}},"j":{"docs":{},"df":0,"k":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":5},"y":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951}},"df":1}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.4142135623730951}},"df":6,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":5,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":5.830951894845301},"https://tjtelan.com/blog/status-update/":{"tf":2.449489742783178}},"df":2}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":7}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":2}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":3}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.0}},"df":11}},"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":10},"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":8,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3}}}}}},"r":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.7320508075688772}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}}},"v":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":4}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4}},"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2}}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1},"h":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.0}},"df":5}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":6}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":3}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":2}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0}},"df":2}}},"b":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":2}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951}},"df":3}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":8}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":3,"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":1,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.0}},"df":8,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":3,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":4,"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"8":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1,"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":3}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":3,"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"x":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.23606797749979},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.8284271247461903}},"df":2,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.449489742783178},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.242640687119285},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":5,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":2}}}}}}}},"n":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":13,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/about/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":4}}},"r":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4},"e":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":5}}}}}},"n":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}},"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":6}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":4},"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":2}},"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":7}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"]":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"g":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907}},"df":2}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":5}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.3166247903554},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.3166247903554},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":2.0}},"df":9,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"v":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951}},"df":1}}}}}},"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":8},"e":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":5}}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":14}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2},"x":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3},"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.605551275463989},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.8284271247461903}},"df":6},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":5}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":6}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":2},"m":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.1622776601683795}},"df":3,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772}},"df":3}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}},"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3}},"n":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.872983346207417},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907}},"df":11}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}}}}},"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1,"1":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":5.291502622129181},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.242640687119285}},"df":5}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":8,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951}},"df":2,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":4.242640687119285},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":6,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":3.0}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":8,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":2}},"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.3166247903554},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.23606797749979},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979}},"df":17,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":6}},"e":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.23606797749979},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":9,"b":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":3}}},"v":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":7}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":6.557438524302},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":5.477225575051661},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":3}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.605551275463989},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.242640687119285},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":7,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"i":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1,"d":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":4}},"l":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}}}}},"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951}},"df":1}}}},"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":4},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772}},"df":1}}}}},"g":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951}},"df":3,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":3}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}}}},"t":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":5,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":3}},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/about/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":12,"'":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2},"’":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772}},"df":1}}}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1},"’":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"]":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":5,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":8,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2},"s":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"5":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"#":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"/":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2}}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/about/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":8}},"m":{"docs":{"https://tjtelan.com/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":2.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.23606797749979},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.7320508075688772}},"df":18},"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.23606797749979},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":2.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":2.23606797749979},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":11}},".":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2},"3":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":2}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"d":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3}}}}},"l":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":3.1622776601683795}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.23606797749979},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979}},"df":3,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.123105625617661}},"df":7}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.7416573867739413},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3}}}}},"n":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":7}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"x":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"$":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}},"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6}}}},"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":3}}},"k":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.605551275463989},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":7,"o":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.358898943540674}},"df":1,"/":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":2.449489742783178},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":11},"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1},"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}},"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":5,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":4}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":3},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1,"v":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772}},"df":1},"6":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":2}},"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":7}}},"t":{"docs":{},"df":0,"'":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":2}}}},"’":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.23606797749979},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6}},"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.449489742783178},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":7},"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}},"j":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.4142135623730951}},"df":1}}},"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":3.3166247903554},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2},"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"k":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":9}},"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"’":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"y":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907}},"df":6,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":5},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":8,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3}},"g":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"#":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":11,"e":{"docs":{},"df":0,"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":4}}}},"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":5}}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":9},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.8284271247461903}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"z":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":10,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"d":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"’":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":5}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}}}},"f":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":3}}}}},"f":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951}},"df":2}}},"n":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":9,"r":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":6},"u":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907}},"df":4,"'":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.605551275463989},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":14}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":4}}},"k":{"docs":{},"df":0,"f":{"docs":{},"df":0,"j":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.0}},"df":1}}}}}},"j":{"docs":{},"df":0,"f":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772}},"df":1,"\\":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":6,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772}},"df":1}}}}},"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4}}},"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.4641016151377544}},"df":1},"n":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":17},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772}},"df":1}}}}},"s":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":2},"s":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":2.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":9},"w":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"s":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":3},"t":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"@":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951}},"df":1}},"k":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}},"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.23606797749979}},"df":1,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.242640687119285}},"df":4,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.3166247903554}},"df":2}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":16,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":2.0},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":8}},"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":7,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":3}}}},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.23606797749979},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.7320508075688772}},"df":2}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.7320508075688772}},"df":1}}},"y":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":8,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178}},"df":3}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772}},"df":1}}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":2.23606797749979},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.7320508075688772}},"df":4}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":2}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3}}}},"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}}}}}}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"e":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}},"k":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}},"e":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":3,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.123105625617661}},"df":4,"e":{"docs":{},"df":0,"’":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":2.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.0}},"df":18},"n":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}},"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":3}},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979}},"df":3}}},"q":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}},"s":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.8284271247461903}},"df":1},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.4142135623730951}},"df":12}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":4}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":3,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":4.47213595499958},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.69041575982343},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951}},"df":8,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}},"/":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":3}},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.449489742783178},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.23606797749979},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.605551275463989},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.449489742783178}},"df":14}},"g":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":5.291502622129181},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":3,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":2}}},"w":{"docs":{"https://tjtelan.com/about/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.4142135623730951}},"df":16,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":1}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.4142135623730951}},"df":1}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":8}}},"f":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772}},"df":1,"s":{"docs":{},"df":0,"'":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1,"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4,"e":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":6,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951}},"df":1}}}}},"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":4},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":4},"f":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":12,"\\":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}},"p":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":4.358898943540674}},"df":1,"j":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":5}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2,"s":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}},"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":1,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.23606797749979},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":2,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":1}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":1}}}}}}},"p":{"docs":{},"df":0,"w":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907}},"df":13,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3},"e":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2}}},"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":5}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6},"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":3}}}},"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}},"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.47213595499958},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.58257569495584},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":8,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":4}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}}}},"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":3},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.3166247903554},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.449489742783178},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":17,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.242640687119285},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":5,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":9,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}}}}},"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2}}}}}}}}},"p":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":7}},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":3.4641016151377544}},"df":1}}}},"g":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":5,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1},"r":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951}},"df":4,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.449489742783178},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.3166247903554}},"df":5,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.7320508075688772}},"df":8,"=":{"docs":{},"df":0,"~":{"docs":{},"df":0,"/":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,"$":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"}":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"z":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178}},"df":5}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907}},"df":1}}},"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772}},"df":3}}},"p":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0}},"df":1,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}},"@":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}},"c":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.4142135623730951}},"df":1,"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":3}}}},"e":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":5.0990195135927845}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"'":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"’":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":2.6457513110645907}},"df":1},"q":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"n":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":5},"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":3}}}}},"y":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":9,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5}}},"m":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951}},"df":1},"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":3,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4}}}},"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":2.449489742783178},"https://tjtelan.com/blog/status-update/":{"tf":2.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.0}},"df":16,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":3.0}},"df":1,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951}},"df":1}}}}}},"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}},"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"=":{"docs":{},"df":0,"~":{"docs":{},"df":0,"/":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":1},"y":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}},"s":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":5}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":4,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"{":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772}},"df":1}}}}},"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.8284271247461903}},"df":1}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}},"{":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":5}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":3.3166247903554},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":8,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":8}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":12}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":2}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":5.0}},"df":2,"3":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.58257569495584},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.872983346207417}},"df":2,"'":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}}},"x":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"s":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":6.557438524302},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.4641016151377544}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":2.23606797749979}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.23606797749979}},"df":2,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":6}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":3.0}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.0}},"df":1}}}},"w":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":4,"'":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.8284271247461903}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.1622776601683795}},"df":1},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":4}}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":7}},"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}},"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0}},"df":1},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}},"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.0}},"df":1}}}},"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1,"[":{"docs":{},"df":0,"0":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":10,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2},"m":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"z":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":9}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.7320508075688772}},"df":1}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":5,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}}}}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":1}},"v":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}},"d":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2,"o":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"f":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951}},"df":6}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1},"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951}},"df":1}}}},"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":1}}}}}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":2},"x":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"y":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.23606797749979}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5}},"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":3}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":5.0}},"df":1,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0}},"df":1}}}}}}}}}}}},"v":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":2,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"q":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.23606797749979},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.23606797749979},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":5,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":6}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"z":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907}},"df":2}}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":8,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":1,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178}},"df":7}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":6}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":5}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0}},"df":1,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"'":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.605551275463989}},"df":1,"’":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.23606797749979},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":6.708203932499369},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.0}},"df":20,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":3.605551275463989},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":5.0990195135927845},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":4.795831523312719},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":8,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}},"x":{"docs":{},"df":0,"v":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3}}}},"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":12}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2}},"y":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"b":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.7320508075688772}},"df":1}}}},"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.6457513110645907}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":3}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":5}},"w":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.6457513110645907}},"df":6}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/about/":{"tf":1.0}},"df":1}}}},"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3}}},"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979}},"df":10,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":2},"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979}},"df":2}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":5,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2}}},"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":3},"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.449489742783178}},"df":4}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}}}},"q":{"docs":{},"df":0,"=":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":10.63014581273465},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.0}},"df":6,".":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}},"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":5.744562646538029},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.449489742783178},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.449489742783178}},"df":6,"e":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.6457513110645907}},"df":1},"2":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.6457513110645907}},"df":1}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/now/":{"tf":1.4142135623730951}},"df":2}}}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":16,"t":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":3}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":1}}}},"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":4.358898943540674},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.605551275463989},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795}},"df":6,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}}}}},"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":6}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":4}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":14,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}},"k":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":1}},"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1,"e":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3,"’":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"z":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":3}}},"l":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2},"k":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5}}}}}},"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":3}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/about/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":5}}}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"o":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}},"v":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":11}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":3.3166247903554}},"df":4,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":10}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":3}},"f":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":8,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":3}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":7}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":4}}}},"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772}},"df":5}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772}},"df":4}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.872983346207417},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.0}},"df":16,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}},"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":3,"s":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}},"y":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,",":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"{":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1},"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":2,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":3.3166247903554},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":8}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":5}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"y":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":5.291502622129181},"https://tjtelan.com/now/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.7416573867739413},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":5.916079783099616},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":6.0}},"df":3,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":5.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":2,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.1622776601683795}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":4},"i":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772}},"df":1},"u":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":6.48074069840786},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772}},"df":1}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/about/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":4,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":9}},"s":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":4}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/senior-project-update/":{"tf":2.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.7320508075688772}},"df":8,"7":{"docs":{},"df":0,"6":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"j":{"docs":{"https://tjtelan.com/":{"tf":1.0},"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":3}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.3166247903554},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":12,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":2.23606797749979}},"df":1,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"z":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951}},"df":1}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"(":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":3},"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":2}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"'":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":2}},"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.449489742783178},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":7.483314773547883},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":3.872983346207417},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.7320508075688772}},"df":12,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":1}}},"\\":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":2}},"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":2.449489742783178},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":6}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"'":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2},"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"'":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.0}},"df":12},"k":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":8}},"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":9}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":11,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}},"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.449489742783178},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":19,"=":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1},"2":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951}},"df":1}},"5":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}}}}}}},"p":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":2.0}},"df":1},"t":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979}},"df":1}}},"j":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.6457513110645907}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}}}}}}}},"n":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":4}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":2.0}},"df":4,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772}},"df":1,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.58257569495584},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"{":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3},"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":5}},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":4}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.1622776601683795}},"df":3}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1}},"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.4142135623730951}},"df":12,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951}},"df":1}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.23606797749979}},"df":1}}}},"p":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":5}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.0}},"df":2},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"=":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":6}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.449489742783178},"https://tjtelan.com/now/":{"tf":1.0}},"df":2}}}},"o":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/now/":{"tf":1.0}},"df":3}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":3.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":5.0990195135927845}},"df":6},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":2.0}},"df":5}}}}},"i":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0}},"df":3},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":2.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":3}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":2.0}},"df":1,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":4}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":4}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":3}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.449489742783178},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":16,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951}},"df":2}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"s":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.6457513110645907},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":4.123105625617661},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.23606797749979},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.23606797749979},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":4.47213595499958},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":2.23606797749979},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.449489742783178},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":3.3166247903554},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":9.055385138137417},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":2.23606797749979},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":2.0},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":2.23606797749979},"https://tjtelan.com/blog/taking-notes/":{"tf":2.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":6.708203932499369},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":4.358898943540674},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.0}},"df":27,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1}},"g":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":5}},"b":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":3.1622776601683795},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.795831523312719},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":10,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"@":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}},"z":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":2}}}}},"2":{"docs":{},"df":0,"8":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}},"3":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1},"4":{"docs":{},"df":0,"l":{"docs":{},"df":0,"2":{"docs":{},"df":0,")":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":1}},"u":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.449489742783178}},"df":5}}}}}},"b":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.7320508075688772}},"df":1,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":2}}}}}}}}},"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.23606797749979},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.0}},"df":3}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":2.23606797749979},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":9,"f":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":2.0},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":7}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6},"c":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":1}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":2}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":2.0}},"df":2,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":2.0}},"df":1}}}},"s":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951}},"df":1}}}}}}},"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":5,"/":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":2}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":2.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.23606797749979},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":4.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":2.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.605551275463989},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":3.3166247903554}},"df":17}},"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":2.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0}},"df":5}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"y":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"y":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":9}},"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":2}},"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951}},"df":1}},"b":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/senior-project-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.23606797749979}},"df":1,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":7}},"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":2}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.6457513110645907}},"df":1}},"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.605551275463989},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3},"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"’":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":2}}}}}}},"o":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1,"7":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":2.23606797749979},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":2.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":3.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.8284271247461903}},"df":8,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":9}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1}}},"’":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.0}},"df":3,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.7320508075688772}},"df":1}}}}}},"k":{"docs":{"https://tjtelan.com/about/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":2.449489742783178},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":2.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":2.23606797749979},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/status-update/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.7416573867739413},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":19,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3,"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"c":{"docs":{},"df":0,"y":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.8284271247461903},"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":3}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/about/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":2.23606797749979},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":3.3166247903554},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":3.4641016151377544},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":2.449489742783178},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":3.7416573867739413},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":2.449489742783178},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.7320508075688772}},"df":16},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/taking-notes/":{"tf":1.7320508075688772},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":4}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}},"h":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"]":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.7320508075688772}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"’":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"8":{"docs":{},"df":0,"6":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":2.0},"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,")":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1}}}},"z":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":2.6457513110645907}},"df":1}},"y":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1,"a":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}}},"o":{"docs":{"https://tjtelan.com/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":4}},"r":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"@":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":2}}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.7320508075688772}},"df":4}},"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.4142135623730951}},"df":2},"v":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.4142135623730951}},"df":1}}}}},"z":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"f":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.4142135623730951}},"df":1},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":2.6457513110645907}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":2.6457513110645907}},"df":2,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}}}},"title":{"root":{"docs":{},"df":0,"1":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0}},"df":1},"2":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"3":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0}},"df":1},"4":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":1},"7":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":6}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}}}}},"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":2}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"’":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-has-arrived/":{"tf":1.0},"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":3}}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0},"https://tjtelan.com/now/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":4}}},"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1,"p":{"docs":{"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":6}}},"x":{"docs":{},"df":0,"v":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":4}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/learning-new-build-systems/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"https://tjtelan.com/blog/taking-notes/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://tjtelan.com/blog/ubuntu-breakup/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/metawatch-initial-impression/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/now/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"tf":1.0},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"tf":1.0}},"df":4}}},"p":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://tjtelan.com/blog/senior-project-update/":{"tf":1.0},"https://tjtelan.com/blog/status-update/":{"tf":1.0}},"df":2}}}},"s":{"docs":{"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"tf":1.0},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://tjtelan.com/blog/goodbye-wordpress/":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"tf":1.0}},"df":1}}}}}}}}}},"x":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"tf":1.0}},"df":1}}}}},"z":{"docs":{"https://tjtelan.com/blog/tarball-xz/":{"tf":1.0}},"df":1}},"z":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"tf":1.0}},"df":1}}}}}},"documentStore":{"save":true,"docs":{"https://tjtelan.com/":{"body":"Yo. I'm T.J. Welcome to my blog.\n","id":"https://tjtelan.com/","title":""},"https://tjtelan.com/about/":{"body":"My name is T.J. Telan. I am a software engineer based in Seattle. This blog is where I host my writing. Occasionally I'll submit to other platforms but I'll always repost here.\nI work on Orbital CI.\nI write about:\n\nBeing productive with new technology \nExplanation of complex software systems\nAutomation\nProgramming languages\nSecurity\nOpen Source software\n\nI post my blogs here\n\nDev.to.\n\nNewsletter!\nIf you want to get an email whenever I post a new blog then subscribe to my newsletter.\n","id":"https://tjtelan.com/about/","title":"About"},"https://tjtelan.com/blog/":{"body":"","id":"https://tjtelan.com/blog/","title":"Blog"},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"body":"My goal is to find more work opportunities to write in Rust the same way I can write in Python and Go. Since I spend a lot of time designing and executing automation, it felt useful to start somewhere familiar. How about a simple Unix shell? Yes, I use bash all the time.\nRather than get this all worked out before posting, I'm going to document as much of my thought process in the design, as I have it. (But I am editing this to spare you the noisier stream-of-consciousness experience.)\nI'll have code snippets occasionally, but I'm trying to keep the audience around intermediate experience (where I consider myself to be today). I'm going to assume you use another programming language today to Get Shit Done, and use the terminal to do simple things, but not necessarily write shell scripts.\nWhy am I doing this? I don't often see posts from beginning Rust learners doing practical, simple things (that can simply be copy/pasted and modified slightly), like in the other more mature language communities... Widest market? Probably not. \nI guess that's enough rambling. Let’s dive in.\n\nWhat’s a shell?🔗\nA shell is an interactive language interpreter that allows you to run text-based commands and translates them into an action, such as making internal function calls, or running external programs.\nYou usually use it to access resources from the operating system. \nAdditional to accepting a text command - it typically outputs text results and/or causes some other side-effect.\nYou may know some of the name brand shells like the kind we're making, a Unix shell:\n\nBourne-shell (sh)\nbash\nzsh\nfish\n\nOr the windows specific:\n\nCommand Prompt (cmd.exe)\nPowershell\n\nOr interpreted languages:\n\npython \nlua\nhaskell \n\nShells run in terminal emulators. This is (over-) simplified as the text-only window that runs your shell. \nIt handles the interaction from you (known as Standard-In, like keystrokes) and your shell (known as Standard-Out for the buffered/flushed output style, and Standard-Error for the direct output style).\nIn most cases, the terminal emulator and shell are different processes (Windows’ cmd.exe and Powershell are confusingly, both the shell and terminal emulator) \nYou may have made reference to it by other common names such as:\n\ncommand prompt\nterminal\nconsole\n\nExamples of some terminal emulators\n\nxterm\nrxvt\niTerm\nTerminal.app\nWindows Command Prompt\nPowershell\n\nI’m going to focus on writing a bash-like shell. Functionality, and syntax should feel familiar. \n\nThe shells are a REPL, a Read-Eval-Print-Loop.\nTypically, a character (let’s say ‘$’) is printed and a cursor blinks. This informs the user that a command can be typed in.\nYou type in a command.\nYou hit enter to translate the command into an action.\nThe output of the program prints to the screen.\n$ \nWhat does this mean for me?🔗\nIt lets us quickly stub the code out into this REPL  pattern \nOur main function that will enter a loop. Inside the main loop, we request a command from the user, and do something. Then we do it all over again. \nBreaking down the steps🔗\nFirst we Read🔗\nWe need to take user input. Most shells print a symbol to signal to the user that we can input a command (as opposed to, for example, executing a command). I need to learn how to get a text command from the user. \nLet's start our definition of a command. \nCommand\n\na series of words separated by spaces.\n\n$ keyword arg1 arg2 arg3… \n\nThe first word is a keyword. It's either a built-in function or an executable on the filesystem, with the rest of the line being parameters passed to our function. \nKeyword\n\nOne of 2 possibilities :\n\nA built-in function to the shell (that is, calling a function in the code)\nAn executable\n\nEither in one of the directories in your PATH\nOr a filesystem path (relative or absolute)\n\n\n\n\nThen we Execute🔗\nWhen we use a command that calls a built-in, we simply pass the arguments to the function, and return back to the start of the loop when it completes. \nAnd when we call an executable?🔗\nWe need to make a fork syscall, that is, create a new process for the executable to run in, so it can have its own memory space, and manage its own interactions with the operating system. (The shell is still the parent process) \nTo start a process inside the child process, we have to call the exec syscall. \nThen we Process🔗\nThis is when we cause side-effects to the system.\nWe want to provide feedback to the user to let them know the results of this process. To keep this simple, we will only consider returning text to the user, as we are providing commands as text. \nOur shell process has at least 3 file descriptors for passing input, or receiving output provided. Stdin, Stdout, and Stderr. I need to know how to do that purely with Rust. \nAfter the process is complete, any output should be printed to the screen, via stdout or stderr.\nExit codes will be treated as binary for this exercise. It should be set to 0 if we exit without error. Otherwise the exit code will be 1.\nLastly, we Loop🔗\nReturn of control will go back to the user. The default user prompt will print as a visual cue (along with the typical blinking cursor) and we should be able to enter another command. \nThe coding strategy🔗\nSo then we're running commands. Let's review the strategy. \n\nI need to know how to take input command in a loop. \nI need to process the input to separate the keyword from the arguments \nI need a way to call both builtins and executables. \nThe most abstract : I need to give the user feedback about the command run. (E. g. Print onto screen as appropriate and set an exit code of the command.) \n\nIn the next post, we'll dive into using cargo and  start writing in Rust. \n","id":"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/","title":"Building a Unix-shell in Rust - Part 1"},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"body":"This is the 2nd part of a series where I document writing a command shell in Rust. In the previous post I reviewed what a shell is, and broke that down into stages I can use to organize my code.\nGetting user input🔗\nFirst thing we need to do is create a project. Let’s use Cargo to create this for us.\n$ cargo new --bin rust-shell\n\nFor now, I'm going to assume we are only running interactively. So I'm just going to get a simple loop set up that asks for an input, and echoes it back to me.\nuse std::io;\n\nfn main() {\n  loop {\n    let mut command = String::new();\n    io::stdin().read_line(&amp;mut command)\n      .expect(\"Failed to read in command\");\n    println!(\"{0}\", command);\n  }\n}\n\nI’m using std::io to read input into the mutable command variable binding, then I println() to echo my input back to the screen.\nThen we build:\n$ cargo build\n   Compiling rust-shell v0.1.0 (file:///Users/telant/src/rust-shell)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.25 secs\n\nNo errors.\nAnd testing it out:\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target/debug/rust-shell`\n123\n123\n\ntest\ntest\n\nGreat. Looks like that was easy.\nWhat we see here is me trying 2 commands: 123 and test. We see the command printed right back. (Printing a short prompt might make that more obvious… ) \nParsing the input into tokens🔗\nNext step is to break the user input from a single continuous string into smaller pieces that we can evaluate. \nI am just going to tokenize the string using spaces as delimiters (because it is easy. It is, however, not always accurate, but, Dear Reader, I already know this is not the final way I am going to implement tokens. Splitting on spaces is too greedy of an approach. Quoted arguments are usually evaluated to be a single argument, including spaces, for uses that include passing entire raw strings to other programs. Let's not get perfection distract us. I'll stay focused on getting something that works...)\nI actually ran into a little bit of trouble getting this working on a single line, with the original variable because of the type checker.\nThis did not work:\n$ cargo build\n   Compiling rust-shell v0.1.0 (file:///Users/telant/src/rust-shell)\nerror[E0282]: unable to infer enough type information about `B`\n  --&gt; src/main.rs:11:41\n   |\n11 |     println!(\"{:?}\", command.split(' ').collect());\n   |                                         ^^^^^^^ cannot infer type for `B`\n   |\n   = note: type annotations or generic parameter binding required\n\nI’m lazy, and I didn’t look into how to explicitly reference the type.\nThis did work. \nlet command_split : Vec&lt;&amp;str&gt; = command.split(' ').collect();\nprintln!(\"{:?}\", command_split);\n\nThis is the relevant output\ntest test test\n[\"test\", \"test\", \"test\\n\"]\nblah blah \"string in quotes\"\n[\"blah\", \"blah\", \"\\\"string\", \"in\", \"quotes\\\"\\n\"]\n\nI’m going to have to learn how type inference works in Rust sooner or later, but I’m not going to deal with it now. String types in Rust are kind of confusing coming from Python where I don’t have to deal with types very often.\n(This is a warning from the future. You should lightly understand the idiomatic difference between String and &amp;str. You find this out the hard way when you get to refactoring… see you in the future)\nI’m going to use this moment to make the interface a more obvious when the we are ready to take user input by printing a prompt character.\nuse std::io::{self,Write};\n\nfn main() {\n  let prompt_char = \"%\";\n  loop {\n    print!(\"{0} \", prompt_char);\n    io::stdout().flush().unwrap();\n\n    let mut command = String::new();\n    io::stdin().read_line(&amp;mut command)\n      .expect(\"Failed to read in command\");\n    println!(\"DEBUG: {:?}\", command);\n\n    let command_split : Vec&lt;&amp;str&gt; = command.split(' ').collect();\n    println!(\"DEBUG: {:?}\", command_split);\n  }\n}\n\nI added DEBUG: to our debug statements. Also I had to include a new use, use the print! macro, and flush the buffer so it would print to the screen immediately.\nI got this pattern from the Rust docs for print!\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target/debug/rust-shell`\n% Feeling a little more shell-like now\nDEBUG: \"Feeling a little more shell-like now\\n\"\nDEBUG: [\"Feeling\", \"a\", \"little\", \"more\", \"shell-like\", \"now\\n\"]\n%\nClassifying parsed input🔗\nLast thing I’m going to do is identify the keyword from the arguments, then I’ll do a little refactoring to help organize the new complexity. (I expect to do a little fighting with the borrow checker at this point.)\nGetting the keyword is easy. I just need to pick off the first element of our tokenized command.\nThe arguments is a vector slice of everything but the first element of the command. Can I slice a vector as easily as slicing lists in Python? Yes.\nuse std::io::{self,Write};\n\nfn main() {\n  let prompt_char = \"%\";\n  loop {\n    print!(\"{0} \", prompt_char);\n    io::stdout().flush().unwrap();\n\n    let mut command = String::new();\n    io::stdin().read_line(&amp;mut command)\n      .expect(\"Failed to read in command\");\n    println!(\"DEBUG: Raw input: {:?}\", command);\n\n    let command_split : Vec&lt;&amp;str&gt; = command.split(' ').collect();\n    println!(\"DEBUG: Split input: {:?}\", command_split);\n\n    let keyword = command_split[0];\n    let arguments = &amp;command_split[1..];\n\n    println!(\"DEBUG: Keyword: {0}\", keyword);\n    println!(\"DEBUG: Number of arguments: {0:?}\\nDEBUG: Arguments: {1:?}\", arguments.len(), arguments);\n  }\n}\n\nI have to call the slice by reference using &amp; with the vector, and I specified the range I wanted to slice with the element I want to start from and .. without an ending element. Rust figures out the bounds in this case.\nTime to refactor!🔗\nI’m going to make the main loop look a little more functional (inside the loop).\nPrinting the prompt? Easy. Function call.\nfn print_prompt() {\n  let prompt_char = \"%\";\n\n  print!(\"{0} \", prompt_char);\n  io::stdout().flush().unwrap();\n}\n\nReading the command from user input? I had to look up how to return variables. The style is to use an implicit return, and no semicolon. You can use return, but it isn't very idiomatic. \nfn read_command() -&gt; String {\n    let mut command = String::new();\n    io::stdin().read_line(&amp;mut command)\n      .expect(\"Failed to read in command\");\n    println!(\"DEBUG: Raw input: {:?}\", command);\n\n    command\n}\n\nTokenizing the command? Gonna get a little more complicated. I’m going to set up a struct to represent the command so I can keep the tokenized command together in a single object.\n\nOptional : First fight with borrow checker🔗\nI almost lost the motivation to continue the documenting my thought process because of this obstacle. This section can be skipped if you are looking to follow my happy path, and don't want to follow my confusion. \n(This is what I wrote first, when I was actually having a fight with the borrow checker…)\nI have to learn a little bit about lifetimes in order to get this to compile. This makes some sense, since the struct will need to own the slice data, and in the original code, we were just borrowing the slice.\nI’m finding it confusing thinking about what I need to do in order to make the tokenizing function use the Command struct. If I can copy the args to the struct, and give ownership of the string to the struct, then I assume this will compile?\nWhat type is the copied slice, and how do I specify that in the struct? How do I use the lifetime in code to find my use case? I don’t even know what other questions to ask next.\nRather than try to figure out how to compile, and get the struct working with tokenizing the command, I’ll try to play around in main() and try instantiating my struct.\nWhat I need to be able to do is copy the data in the vector. I tried for a while trying to pass ownership of a slice, but I ended up finding a way to take the first element out of the vector, and having the rest be the arguments be what is left. I feel a little over my head at this point, and I’m going to spend some time reading the docs.\nThis is what the struct looked like.\n/// Bad.\nstruct Command &lt;'a&gt; {\n   keyword : String,\n   arguments : &amp;'a [&amp;'a str],\n }\n\nThe reason I went with this approach was I thought I could pass the ownership of the heap from when I split the command by whitespace. This was really not a good approach, and I wasted quite a lot of time fighting with the borrow checker.\n\nBack to the show🔗\nI ended up changing the way I split the original command string so I would have a Vec rather than Vec&lt;&amp;str&gt;. Because String is owned and &amp;str is borrowed, and the Command struct needs to own its data. \nI think I have a much more straightforward function.\nstruct Command {\n  keyword : String,\n  args : Vec&lt;String&gt;,\n}\n\nfn tokenize_command(c : String) -&gt; Command {\n  let mut command_split : Vec&lt;String&gt; = c.split_whitespace().map(|s| s.to_string()).collect();\n  println!(\"DEBUG: Split input: {:?}\", command_split);\n\n  let command = Command {\n    keyword : command_split.remove(0),\n    args : command_split,\n  };\n\n  command\n}\n\nBefore getting to the next step of evaluating the parsed command, I want to take a moment to learn how to set up tests that will run with the builds. See you next time. \n","id":"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/","title":"Building a Unix-shell in Rust - Part 2"},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"body":"This is the third post in a series on writing a simple shell in the Rust language. (I suggest you start from the beginning!) \nIn the previous post , I implemented a simple REPL that simply prints out debug output with the input split by whitespace.\n\nIn this post, I would like to take the opportunity to set up tests before much more complex functionality gets included. Consider this to be the first part of what potentially might be multiple posts about writing and organizing testing with cargo.\nIs testing important?🔗\n\nProgram testing can be a very effective way to show the presence of bugs, but it is hopelessly inadequate for showing their absence. \nEdsger W. Dijkstra\n\nI don’t think it is controversial to say I think it is important. Good tests can help protect you from accidental regressions in functionality, and can be an added check on your assumptions, and manual testing. My intention is to write objective unit tests that will replace what I've been doing manually. \nWhy write the tests now? Why not later?🔗\nTo be honest, I want the tests now because I’m looking for ways to use Rust for production code at work, and I need to get a feel for how a Rust codebase matures. As I am exploring Rust, I have come to be impressed with how easy cargo test makes it to write and execute tests.\nIt also will be less work to write test code for a small amount of code I just wrote now, rather than a larger amount of code later. Since it's been my experience that testing will just become reactive. And I get to go back to writing new feature code sooner.\nGetting started with unit testing🔗\nTesting is something that I always seem to go through with print statements, which is better than nothing, but not the most reliable way to be mindful of functionality regression. I would like to try to write more tests, as well as more functional code.\nhttps://doc.rust-lang.org/book/testing.html\nAccording to the official Rust handbook, for unit-style tests, like the what I would like to write, the convention is to create a tests module.\nI’ll cover integration tests in a later post, when I reorganize the project into different files. For now, I’m going to start slow and try to understand the new parts of Rust I get to use.\nIn the same file as the rest of my code, I add my test module with unit tests. I’m going to cover testing the tokenize_command() function.\nmain.rs\n#[cfg(test)]\nmod unittest_tokenize_command {\n    use super::*;\n\n    #[test]\n    #[ignore]\n    fn empty_command() {\n      assert_eq!(\"\", tokenize_command(\"\".to_string()).keyword)\n    }\n\n    #[test]\n    fn test_keyword() {\n      assert_eq!(\"test\", tokenize_command(\"test\".to_string()).keyword)\n    }\n\n    #[test]\n    fn no_arg() {\n      assert_eq!(0, tokenize_command(\"test\".to_string()).args.len())\n    }\n\n    #[test]\n    fn one_arg() {\n      assert_eq!(1, tokenize_command(\"test one\".to_string()).args.len())\n    }\n\n    #[test]\n    fn multi_args() {\n      assert_eq!(3, tokenize_command(\"test one two three\".to_string()).args.len())\n    }\n\n    #[test]\n    #[ignore]\n    fn quotes() {\n      assert_eq!(2, tokenize_command(\"test \\”one two\\” three\".to_string()).args.len())\n    }\n}\nBreakdown of test module🔗\nI’ll introduce the new syntax.\nuse super::*🔗\nThe use of use is new to me in Rust. I assume it means I am bringing in the namespace scope from outside to the top-level (instead of using super:: at every function call) \nSince the test module is an inner module, we need to bring the functions from the outside scope into the module’s local scope. We can do this individually, but we can just use * to pull them all in, even though I’m not going to be testing them all right now.\nFor more information about this usage, look at the Crates and Modules page in the Rust documentation.\nAttributes🔗\nThe # lines are called attributes. Attributes are defined by the compiler, and are used for different things. As of Rust 1.17, we currently we cannot create our own attributes. I’ll quickly describe the attributes we use, (but here’s the reference to all of the attributes.\n#[test]🔗\nThe #[test] attribute labels the functions as tests to the rust compiler. This is how cargo test knows what functions to run for tests.\n#[ignore]🔗\nThe #[ignore] attribute tells cargo to skip the test. (However, you can tell cargo to run the ignored tests by running cargo test -- --ignored) I am using this attribute, because as I started writing tests, I realized I hadn’t covered the functionality that would let the tests pass. I don’t want to forget to do this, so I’ll write the test now.\n#[cfg(test)]🔗\nIn #[cfg(test)], we’re using the cfg attribute on the unittest_tokenize_command module. In our usage, the attribute tells the Rust compiler to compile the module only when we are compiling tests, like when we run cargo test.\nRunning the tests🔗\nWe just need to run cargo test.\n$ cargo test\n   Compiling rust-shell v0.1.0 (file:///Users/telant/src/rust-shell)\n    Finished debug [unoptimized + debuginfo] target(s) in 0.45 secs\n     Running target/debug/deps/rust_shell-cdb27ec22ae15a63\n\nrunning 6 tests\ntest unittest_tokenize_command::empty_command ... ignored\ntest unittest_tokenize_command::quotes ... ignored\ntest unittest_tokenize_command::no_arg ... ok\ntest unittest_tokenize_command::multi_args ... ok\ntest unittest_tokenize_command::test_keyword ... ok\ntest unittest_tokenize_command::one_arg ... ok\n\ntest result: ok. 4 passed; 0 failed; 2 ignored; 0 measured\n\nAnd we see that the all but our ignored tests pass, which is good enough for now!\nIn the next post, I’ll be covering evaluating built-in keywords.\n","id":"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/","title":"Building a Unix-shell in Rust - Part 3"},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"body":"This is the 4th post in a running series about writing a simple unix shell in the Rust language. \nI suggest you catch up on the previous posts before reading ahead! \n\npart 1\npart 2\npart 3\n\n\nBack to evaluating the parsed command. This time we are going to be implementing built-in functions.\nShell builtins🔗\nLet’s quickly review how a shell works.\nUser is prompted for input. The input is tokenized (we are naively splitting on spaces). The first element of the tokenized input is the keyword, and the rest are the arguments. We execute the keyword with the arguments.\nOur keywords correspond to either a shell function call (a builtin) or an external binary in your executable search path, which we will cover when we look to execute binaries in the next part. (In Bash, you can view this path by looking at the value of the environmental variable PATH. $ echo ${PATH})\nBuiltin keywords are functions that are implemented in the shell codebase. Calls to builtin commands are just local function calls. \nIn Bash, usually you can view what commands are implemented as shell functions with $ man builtins. (And some platforms use external binaries for many common builtins, rather than rely on the shell implementation)\nSome common builtins, which we will implement are:\n\necho\nhistory\ncd\npwd\n\nMy initial strategy🔗\nI’m going to keep my strategy simple. When I input a command, I want to run the builtin command. If my input is not a builtin, then let’s throw an error saying the command isn’t found. This will set us up for when we execute binaries,.\nThe first thing we want to do when we process the command is evaluate if it is a builtin. If it is, we want to pass arguments to the builtin function. \nI’m scratching my head a little bit about how to represent the mapping of a keyword to a function in an idiomatic way.\nI’ve found the HashMap module, which is part of the standard collection library, but I’m looking to see if I can use something else that doesn’t require importing a library. I think what I want is an enum and I can pattern match to call builtin functions.\nAfter a little bit of thought, I wondered if I could parse the string into the enum? My google-ing informs me that to accomplish this, I need to implement the fromStr trait. \nenum Builtin {\n  Echo,\n  History,\n  Cd,\n  Pwd\n}\n\nimpl FromStr for Builtin {\n  type Err = ();\n  fn from_str(s : &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n    match s {\n      \"echo\" =&gt; Ok(Builtin::Echo),\n      \"history\" =&gt; Ok(Builtin::History),\n      \"cd\" =&gt; Ok(Builtin::Cd),\n      \"pwd\" =&gt; Ok(Builtin::Pwd),\n      _ =&gt; Err(()),\n    }\n  }\n}\n\nThis is how I use the enum to call the function if it is a builtin\nfn process_command(c : Command) -&gt; i32 {\n  match Builtin::from_str(&amp;c.keyword) {\n    Ok(Builtin::Echo) =&gt; builtin_echo(&amp;c.args),\n    Ok(Builtin::History) =&gt; builtin_history(&amp;c.args),\n    Ok(Builtin::Cd) =&gt; builtin_cd(&amp;c.args),\n    Ok(Builtin::Pwd) =&gt; builtin_pwd(&amp;c.args),\n    _ =&gt; {\n        println!(\"{}: command not found\", &amp;c.keyword);\n        1\n    },\n  }\n}\n\nHere’s an example of one of the builtins. (I’m only going to show one with functionality, because I’m going to implement the rest later)\nI chose to implement echo because it is very easy to verify. \nfn builtin_echo(args : &amp;Vec&lt;String&gt;) -&gt; i32 {\n  println!(\"{}\", args.join(\" \"));\n  0\n}\n\nThe number I'm returning signal that the command is done executing and represent the exit code of the command. 0 is conventionally a successful call, and anything else is an error. \nAnd here we are in action:\n$ cargo run\n    Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target/debug/rust-shell`\n% echo test test test\nDEBUG: Raw input: \"echo test test test\\n\"\nDEBUG: Split input: [\"echo\", \"test\", \"test\", \"test\"]\nDEBUG: keyword : \"echo\"\nDEBUG: args : [\"test\", \"test\", \"test\"]\ntest test test\nDEBUG: Exit code : 0\n% not_a_real_command lkfjdslf lkjfwe\nDEBUG: Raw input: \"not_a_real_command lkfjdslf lkjfwe\\n\"\nDEBUG: Split input: [\"not_a_real_command\", \"lkfjdslf\", \"lkjfwe\"]\nDEBUG: keyword : \"not_a_real_command\"\nDEBUG: args : [\"lkfjdslf\", \"lkjfwe\"]\nnot_a_real_command: command not found\nDEBUG: Exit code : 1\n\nI think I’m going to use this break to do some minor cleanup, write tests, and start using the rust logging mechanisms, such as the log crate. I’ll be back in the next post for running executables.\n","id":"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/","title":"Building a Unix-shell in Rust - Part 4"},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"body":"In an earlier post I mentioned how I was using a VM for my irc usage. I was running GNU screen + irssi to keep a persistent connection so I can idle in channels.\nI've been experimenting with using Cygwin to make my Windows 7 machine my SSH box. So I installed irssi + screen... Looks like everything is all good.\n(BTW: If you use a terminal emulator and you haven't looked into GNU screen, I really recommend that you do.)\nHowever, I've been bumping into issues with reattaching. After running both screen -DR and -DRR just hung there.\nQuick search for a solution led me to [this workaround][cyg-workaround\n#!/bin/sh\n# Send SIGHUP to each screen to force it to let go and let the server recover\nps -as | grep screen | cut -c4-7 | xargs kill -1\n# Reattach\nscreen -xRR\n\nThis works for me. I'd like to not have to go through all the extra trouble, but it is pretty slick.\n","id":"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/","title":"Cygwin Screen Reattach Workaround"},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"body":"Why would we want to do this?🔗\nThe virtualization servers at work are running VMWare ESXi, with Vcenter Server Applicance (VCSA) as our bridge to using cool, free tools like Packer, and Terraform to automate my interactions with virtual resources.\nA downside we discovered is VCSA's lack of support for SMTP that requires auth, which Google requires when you send mail through them.\nPostfix can handle the anonymous request from VCSA, and send it out to gmail with provided creds.\nHow do I get started?🔗\nSince we wanted to get an email whenever there as an issue with the virtualization servers, it made sense to hostthis service on its own hardware.\nI am going to be hosting this service using a Raspberry Pi 3 model B running Raspbian Stretch, and configuring it from my host using Ansible. This detail is not critical for following this guide. Any Debian-derived OS (like Ubuntu) that Ansible supports will work for hosting.\nYou just need to make sure SSH is turned on, and that you have the IP address. (The default username/pass on RasPis is pi/raspberry)\nAt minimum, you need the following tools installed on your host:\n\nPython 3\nAnsible 2.7\n\nDownload this helpful role for installing Postfix. At the time of this writing, it was the best public Postfix Ansible role, because its documentation had examples of how to configure the deployment as a gmail relay. Very straight forward.\nhttps://github.com/Oefenweb/ansible-postfix\nIf you install this role in your Ansible client's role_path,  then you can use the example playbook I slightly modified, (and annotated) from the ansible-postfix README.\nExample ansible playbook🔗\n---\nname: Setup basic raspberry pi host as SMTP relay (Rasbian)\nhosts:\n    mailproxy\nvars:\n    postfix_mynetworks:\n        # This is the IPv4 localhost loopback subnet\n        - '127.0.0.0/8'             \n        # This is the IPv4 mapped IPv6 localhost loopback subnet\n        - '[::ffff:127.0.0.0]/104'  \n        # This is the IPv6 localhost loopback address\n        - '[::1]/128'               \n        # This is the local private network subnet, like the IPv4 address space from your home router\n        # This addition allows other hosts on the network to send mail through this relay!\n        - '192.168.0.0/24'          \n    postfix_smtpd_relay_restrictions:\n        #  This says to permit requests if the client is in the $mynetworks whitelist\n        #  http://www.postfix.org/postconf.5.html#permit_mynetworks\n        - permit_mynetworks\n        #  This says relay the request if client is authenticated to the smtp server\n        #  http://www.postfix.org/postconf.5.html#permit_sasl_authenticated\n        - permit_sasl_authenticated\n        #  This says to reject the request unless it knows about the destination (the domain)\n        #  http://www.postfix.org/postconf.5.html#reject_unauth_destination\n        - reject_unauth_destination\n\n        ## Lastly, I believe the order of these restrictions matter, so this last one must catch the rest of the garbage requests\n\n    postfix_relayhost: smtp.gmail.com\n    postfix_smtp_tls_cafile: /etc/ssl/certs/ca-certificates.crt\n    postfix_relaytls: true\n    postfix_sasl_user: 'username@gmail.com'\n    postfix_sasl_password: 'apppasswordgeneratedgarbage'\nroles:\n    ansible-postfix\nSome additional notes🔗\n\nTo configure vCenter, I followed this guide. It might be helpful to note that I only found these instructions to work with the Flash-based client, not the HTML5-based client. But it would be really great if the settings could be configured over the command line with VMWare's vSphere CLI tool, govc\n\nVMWare Docs - Configure Mail Sender Settings - VSphere 6.5\n\n\nWithout the postfix_mynetworks addition of my local network, I was unable to successfully see email alerts from VCSA being sent from Postfix\nThis also differs from the Oefenweb/ansible-postfix example, in that I am not setting any postfix_aliases, since it was my experience that it didn't ever work. Email was always from whoever was configured as postfix_sasl_user\n\nTest the configuration🔗\nHere is how to send a test email, from the Raspberry Pi, using mail\npi@raspberrypi:~ $ echo \"Hello world, it's ya boi, RaspberryPi\" | mail -s \"[SMTP proxy] Hello World\" your.email@domain.com\n","id":"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/","title":"Deploy Postfix Gmail relay with Ansible on Raspberry Pi"},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"body":"My experience using Github Actions for CI/CD as a solo contributor🔗\nI am using Github Actions to build and deploy my website when I push. That is a classic continuous integration / continuous deployment workflow. It’s convenient to commit, push and have my site build and deploy as a result. This workflow is simple but only works because I am the only contributor.\nGithub Actions for CI/CD with Pull Request🔗\nIt is a good practice to run sanity checks on pull requests prior to merging. How would that be accomplished with Github Actions?\nIt turns out that you can do this but you need to be very intentional with how your jobs are configured.\nIn my workflow, I am designating a main branch zola that will run full CI/CD. Build, test and deploy. And for any other branch, just build and test.\nI’ll share my example Github Actions workflow file, then I’ll provide a template that you can modify and use for your own purposes.\nMy example Github Actions workflow🔗\nHere’s my site’s current workflow file for Github Actions. I’ll break this down.\non:\n  push:\n    branches:\n      - zola\n  pull_request:\njobs:\n  build:\n    runs-on: ubuntu-latest\n    if: github.ref != 'refs/heads/zola'\n    steps:\n      - name: 'Checkout'\n        uses: actions/checkout@master\n      - name: 'Build only'\n        uses: tjtelan/zola-deploy-action@master\n        env:\n          BUILD_DIR: .\n          TOKEN: ${{ secrets.TOKEN }}\n          BUILD_ONLY: true\n  build_and_deploy:\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/zola'\n    steps:\n      - name: 'Checkout'\n        uses: actions/checkout@master\n      - name: 'Build and deploy'\n        uses: tjtelan/zola-deploy-action@master\n        env:\n          PAGES_BRANCH: master\n          BUILD_DIR: .\n          TOKEN: ${{ secrets.TOKEN }}\n\nAt the top, I am specifying the events that I want to trigger on with the on top-level key.\non:\n  push:\n    branches:\n      - zola\n  pull_request:\n\nI want to trigger on push events to the zola branch, and all pull requests.\nLater below are 2 jobs that are almost identical. I’ll break them down one at a time then compare their differences.\nbuild job \n  build:\n    runs-on: ubuntu-latest\n    if: github.ref != 'refs/heads/zola'\n    steps:\n      - name: 'Checkout'\n        uses: actions/checkout@master\n      - name: 'Build only'\n        uses: tjtelan/zola-deploy-action@master\n        env:\n          BUILD_DIR: .\n          TOKEN: ${{ secrets.TOKEN }}\n          BUILD_ONLY: true\n\n\nThis job uses the ubuntu-latest github hosted runner as my environment.\nI do a check for the git ref via the github.ref key. Or another way to say this is I check that the working branch that triggered this job is not the zola branch. I’ll continue forward only if this condition is true.\nLastly are my steps. I use the actions/checkout@master marketplace action to check my code out, and I use my fork of an action for Zola called tjtelan/zola-deploy-action@master. I have an environment variable BUILD_ONLY set to true which results in building my site but not deploying it.\n\nbuild_and_deploy job\n  build_and_deploy:\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/zola'\n    steps:\n      - name: 'Checkout'\n        uses: actions/checkout@master\n      - name: 'Build and deploy'\n        uses: tjtelan/zola-deploy-action@master\n        env:\n          PAGES_BRANCH: master\n          BUILD_DIR: .\n          TOKEN: ${{ secrets.TOKEN }}\n\n\nThis job also uses the ubuntu-latest github hosted runner as my environment.\nI do a similar check for the git ref via the github.ref key. This time I am looking for the working branch to be zola\nLastly are my steps. Same as the previous job, but I am configuring tjtelan/zola-deploy-action@master differently. Rather than setting BUILD_ONLY, I am defining PAGES_BRANCH to master, which is where I want to deploy my site code after build.\n\nLast words on job differences🔗\nThe only differences are the branch check via github.ref, and the specifics of steps. I happen to be using my own Github Action tjtelan/zola-deploy-action but your steps could consist of anything you want to do differently between pull requests and push to your “special” branch.\nGithub Actions template🔗\non:\n  push:\n    branches:\n      - master\n  pull_request:\njobs:\n  build:\n    runs-on: ubuntu-latest\n    if: github.ref != 'refs/heads/master\n    steps:\n      - name: 'Checkout'\n        uses: actions/checkout@master\n  build_and_deploy:\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/master\n    steps:\n      - name: 'Checkout'\n        uses: actions/checkout@master\n\nHere’s a template that you can use for your own push vs PR workflows. By default, I assume master as the special branch, so you’ll need to change that if you want to use a different branch. Additionally, you’ll need to provide all the steps to take after checking code out.\nSources🔗\n\nGithub Community question: How to trigger an action on push or pull request but not both?\nGithub Actions reference: Events that trigger workflows \nGithub Actions reference: Virtual Environments for Github-hosted runners\nGithub Actions reference: Context and expression syntax - Github context\n\n","id":"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/","title":"How to prevent Github Actions from deploying on PR with CI/CD"},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"body":"I just got started using tiling window managers because I find that I am a little more productive when I don't use the mouse. With Xmonad, I don't have to deal with overlapping windows and I never have to use the mouse!\nI did have some trouble integrating Xmonad into my Ubuntu 10.04 install. I couldn't interface with my wireless card, and I can't always be somewhere with a cable. I had to continue using the NetworkManager app until I had more time to play and look through manuals.\nLuckily, I stumbled upon this straightforward walkthrough (Link no longer active). Now I am happily using Gnome and Xmonad in Ubuntu 10.04 Lucid!\n","id":"https://tjtelan.com/blog/gnome-xmonad-lucid/","title":"Gnome Xmonad Lucid"},"https://tjtelan.com/blog/goodbye-wordpress/":{"body":"I am in the process of migrating away from my self-hosted Wordpress to the Github-hosted Github Pages, powered by Jekyll.\nI was finding it difficult to motivate myself to write when my wordpress comments kept getting hit by bots. Please excuse the plain styling while I get the hang of using Jekyll.\n","id":"https://tjtelan.com/blog/goodbye-wordpress/","title":"Goodbye Wordpress"},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"body":"This scenario came from a question I was asked docker-compose and network connectivity between services defined in different docker-compose.yml files.\nThe desired result was to be able to define a docker-compose.yml in one file, and in a second docker-compose.yml have the ability to reach the first service via service or container name for development purposes.\nDefault scenario: Two separate docker-compose.yml and two separate default networks🔗\nLet’s take a simple docker compose file.\nversion: '3' \nservices: \n  service1: \n    image: busybox \n    command: sleep infinity\n\nWhen it starts up, a default network is created. Its name is based on the service name and the directory name of the docker-compose.yml file.\n$ pwd\n/tmp/docker-example/compose1\n\n$ docker-compose up -d\nCreating network \"compose1_default\" with the default driver\nCreating compose1_service1_1 ... done\nSecond docker compose file🔗\nversion: '3' \nservices: \n  service2: \n    image: busybox \n    command: sleep infinity\n\nStarting services in a second docker compose file, we see the same behavior. A new default network is created and used.\n$ pwd\n/tmp/docker-example/compose2\n\n$ docker-compose up -d\nCreating network \"compose2_default\" with the default driver\nCreating compose2_service2_1 ... done\n\nA side-effect of these isolated networks are that the containers are unable to ping one another by service name or container name.\nTest: From Service 1 ping Service 2🔗\n# By service name\n$ docker exec -it compose1_service1_1 ping service2\nping: bad address 'service2'\n\n# By container name\n$ docker exec -it compose1_service1_1 ping compose2_service2_1 \nping: bad address 'compose2_service2_1'\nTest: Service 2 ping Service 1🔗\n# By service name\n$ docker exec -it compose2_service2_1 ping service1\nping: bad address 'service1'\n\n# By container name\n$ docker exec -it compose2_service2_1 ping compose1_service1_1 \nping: bad address 'compose1_service1_1'\nNew scenario: Sharing a network between services🔗\nIf you want define services in multiple docker-compose.yml files, and also have network connectivity between the services, you need to configure your services to use the same network.\nTo create an external network, you can run docker network create &lt;name&gt;. -- where &lt;name&gt; can be a single string without spaces.\nCreating the network🔗\n$ docker network create external-example\n2af4d92c2054e9deb86edaea8bb55ecb74f84a62aec7614c9f09fee386f248a6\nModified first docker-compose file with network configured🔗\nversion: '3' \nservices: \n  service1: \n    image: busybox \n    command: sleep infinity \n\nnetworks: \n  default: \n    external: \n      name: external-example \n\nRestarting the services\n$ pwd\n/tmp/docker-example/compose1\n\n$ docker-compose up -d\nCreating compose1_service1_1 ... done\nModified second docker-compose file with network configured🔗\nversion: '3' \nservices: \n  service2: \n    image: busybox \n    command: sleep infinity \n\nnetworks: \n  default: \n    external: \n      name: external-example \n\nRestarting the services\n$ pwd\n/tmp/docker-example/compose2\n\n$ docker-compose up -d\nCreating compose2_service2_1 ... done\n\nAfter running docker-compose up -d on both docker-compose.yml files, we see that no new networks were created.\n$ docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n25e0c599d5e5        bridge              bridge              local\n2af4d92c2054        external-example    bridge              local\n7df4631e9cff        host                host                local\n194d4156d7ab        none                null                local\n\nWith the containers using the external-example network, they are able to ping one another.\nTest: Service 1 ping Service 2🔗\n# By service name\n$ docker exec -it compose1_service1_1 ping service2\nPING service2 (172.24.0.3): 56 data bytes\n64 bytes from 172.24.0.3: seq=0 ttl=64 time=0.054 ms\n^C\n--- service2 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max = 0.054/0.054/0.054 ms\n\n# By container name\n$ docker exec -it compose1_service1_1 ping compose2_service2_1\nPING compose2_service2_1 (172.24.0.2): 56 data bytes\n64 bytes from 172.24.0.2: seq=0 ttl=64 time=0.042 ms\n^C\n--- compose2_service2_1 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max = 0.042/0.042/0.042 ms\nTest: Service 2 ping Service 1🔗\n# By service name\n$ docker exec -it compose2_service2_1 ping service1\nPING service1 (172.24.0.2): 56 data bytes\n64 bytes from 172.24.0.2: seq=0 ttl=64 time=0.041 ms\n^C\n--- service1 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max = 0.041/0.041/0.041 ms\n\n# By container name\n$ docker exec -it compose2_service2_1 ping compose1_service1_1\nPING compose1_service1_1 (172.24.0.3): 56 data bytes\n64 bytes from 172.24.0.3: seq=0 ttl=64 time=0.042 ms\n^C\n--- compose1_service1_1 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max = 0.042/0.042/0.042 ms\n\n\nAs a note, you can configure your services to use a custom container name by declaring the container_name key under each service (i.e., at the same level as image).\nLink to Docker-compose docs - container_name\n\nTakeaway🔗\nYou can connect services defined across multiple docker-compose.yml files.\nIn order to do this you’ll need to:\n\nCreate an external network with docker network create &lt;network name&gt;\nIn each of your docker-compose.yml  configure the default network to use your externally created network with the networks top-level key.\nYou can use either the service name or container name to connect between containers.\n\n","id":"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/","title":"How to link multiple docker-compose services via network"},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"body":"I've grown accustomed to using a terminal emulator pretty much any time I sit down to use the computer.\nMost of the time I am using my laptop, which is running Linux (Ubuntu, at the moment). I've already got that workstation set up mostly how I like it. But lately I've been using my Windows 7 desktop a lot more for school related (and gaming related) things.\nI use SSH all the time, and when you are using Windows, that means that your choices are limited when looking for a decent SSH client. The only choices I'm going to be considering are Cygwin and PuTTY.\nPuTTY🔗\nPuTTY is alright, but these are the issues I've had with it:\n\nCopy/Paste functionality is different.\nHighlighting text auto-copies to clipboard. Right click auto-pastes into the console.\nNo simple way to set up passwordless login using SSH keys\n\nCygwin🔗\nThe learning curve for Cygwin is a little steep, but the issues I've had\nwith it (without rxvt):\n\nRuns inside cmd.exe\nCannot resize the window larger than default size without messing with cmd.exe window properties\nCopy/Paste is too difficult to use\n\nAttempting to highlight text does nothing unless you are in 'mark mode'. Figure that out.\n\n\nCan't place shortcut in taskbar\n\nBecause the shortcut to cygwin is to a *.bat rather than *.exe\n\n\n\nSo what is the solution to this mess?\nCygwin + Rxvt🔗\n\nInstall the rxvt package with the cygwin installer\nCreate shortcut for rxvt\n\nYou can choose your own colors, fonts, and login shell\nHere is the path I used in my shortcut:\ncygwin-rxvt-launcher:\nD:\\cygwinbinrxvt.exe -sr -sl 2500 -sb -geometry 90x30 -fg green -bg black -tn rxvt -fn \"Anonymous Pro-16\" -e /usr/bin/zsh --login -i\n\nHere, I'm using green text, black background and my favorite monospaced font, Anonymous Pro, at size 16 with Z-shell as my login shell.\nTook me a moment to figure out copy/paste, but here is how you do it. It is an improvement, but not perfect:\nCopy:\nSame as PuTTY. Highlight using mouse to copy text to the clipboard\nPaste:\nHold down Shift and left-click with your mouse.\n","id":"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/","title":"Improving Cywgin in Windows with rxvt"},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"body":"I've been using Arch Linux on my laptop for a while now running Awesome as my window manager.\nI've have struggled to find the motivation to actually fix minor inconveniences because of the workarounds that I always seem to find first.\nIn this post, the inconvenience that I ended up solving is one that laptop users take for granted: the keyboard volume controls.\nInitially, I just had trouble getting sound working. Turns out that I just\nneeded to unmute.\nJust being overwhelmed by how much I need to read just to return some basic niceities back to my laptop usage, I've defaulted to the command line methods of doing what I need to do rather than read new documentation.\nSo that means that I've just been using alsamixer whenever I needed to control my volume since my volume keys did not have any function.\nIt turned out to be very simple. I just had to add a few lines to my awesome config file (rc.lua).\nawful.key({ }, \"XF86AudioMute\", function () awful.util.spawn(\"amixer -c 0 set Master toggle\") end),\nawful.key({ }, \"XF86AudioRaiseVolume\", function () awful.util.spawn(\"amixer -c 0 set Master 2+ unmute\") end),\nawful.key({ }, \"XF86AudioLowerVolume\", function () awful.util.spawn(\"amixer -c 0 set Master 2-\") end)\n\nThese went at the bottom of the globalkeys section in the rc.lua file. I'm not going to cover rc.lua, because if you don't know, then you really need to catch up on some documentation or you will probably screw things up.\nI got the XF86* names by running xev and pressing the buttons. The amixer command -c flag is specific to my needs, so beware before copy/pasting.\nWhen I get more comfortable with editing rc.lua, I plan on making a more detailed post.\nJust taking a break between writing my review for my MetaWatch. Coming soon, I promise.\n","id":"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/","title":"Laptop Volume Buttons in AwesomeWM"},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"body":"I've been meaning to learn how to develop for Android since the G1 (the first Android handset) was released.\nI've also been meaning to develop for my Metawatch since I got it last September, but since launch, a lack of a free/cheap development\nenvironment continues to slow my momentum (and interest) in messing with what is otherwise a nice looking, basic functioning watch. (That also has a motor in it...)\nI'm going to take on both of these goals at the same time.\nI was using the official version of the Metawatch Manager, the software installed in Android that is responsible for sending notifications (and text messages, phone calls...) to the watch to drive the motor and make you look at the watch.\nI later moved onto an app I found in the Android market (err... Google Play). Manager for MetaWatch I've been finding that I really like what the app has offered me over the official one, but it is a little bit buggy and I'm also looking to add some features. It would be great to add the geeky, personal touch that I've been missing that shows that this is my project.\nAnyway, I'm going to get back to the Android tutorial I'm reading.\nOfficial Metawatch Manager github project\n","id":"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/","title":"Learning Android to Play with Metawatch Manager"},"https://tjtelan.com/blog/learning-new-build-systems/":{"body":"I do a lot of devops automation for work. This gives me a lot of opportunity to touch the build systems of many different languages. I have a professional background with Python, and a lot of experience building C/C++ with make.\nI most recently got to play with Java/Maven, and NodeJS/Gulp.\n--\nThe project I was building has a UI written in node, and built into an npm module with gulp. There are also maven pom files that describe the build with gulp using npm run build. This was done so everything could be orchestrated for building into a java jar.\nThings I thought were neat about maven is the plugin system.\nI'm not a huge fan of the pom files using xml, but it is really nice to be able to configure dependencies, and dynamically define build artifacts. The local maven repo is still a little confusing at times, but with more time I think it'll make more sense.\n--\nThe UI build with gulp was more unfamiliar. The build instructions are in javascript, naturally. You can use gulp.task() and define a list of dependencies. But I had some experiences where my dependency lists were not made explicit enough. I suppose this is not much different than makefiles.\n","id":"https://tjtelan.com/blog/learning-new-build-systems/","title":"Learning New Build Systems"},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"body":"\n    \n\nThere are plenty of resources for the basics of Rust and for protocol buffers + gRPC, so I don’t want to waste your time with heavy introductions. I want to bring you to action as soon as possible.\nIf you’re here I’ll make a few assumptions about you.\n\nYou can write code in another language, but you have an interest in Rust\nYou have basic familiarity with the command line for simple tasks (like listing files with ls)\nYou used web service APIs like REST, GraphQL or gRPC in code you’ve written\nYou’ve skimmed through the official protocol buffers (v3) docs at least once\nYou are looking for some example code that you can copy/paste and modify\n\nGoals for the post🔗\nMy goal is to walk through writing a small async Rust CLI application. It will take user input from a client, send it to a remote gRPC server, and return output to the client.\nThe finished code is available in my rust-examples repo, as cli-grpc-tonic-blocking. But I encourage you to follow along, as I will narrate changes while I make them.\nWhat are we writing?🔗\nIn this example, I will be writing a remote command-line server/client.\nThe client will take in a command line command and send it to the server who will execute the command and send back the contents of standard out.\n\n    \n        \n        Diagram of the interaction we'll be working with\n    \n\nFor simplicity sake, this example will wait for the execution to complete on the server side before returning output. In a future post I will demonstrate how to stream output back to a client.\nI will show you how to:\n\nParse command line user input\nWrite protocol buffer message types and service interfaces\nCompile protocol buffers into Rust code\nImplement a gRPC client\nImplement a gRPC server (non-streaming)\nUse basic async/await patterns\n\nBigger picture goals🔗\nThis is not just a simple Hello World.\nI want to provide an example with a realistic application as a foundation. It has potential to be used for something useful, but keep in mind, this example is just a basic script runner and is not secure. \n\n    \n        \n        This configuration is possible but out of scope\n    \n\nOne could run multiple instances of this server on multiple hosts and use the client to run shell commands on each of them similar to continuous integration tools like jenkins, puppet, or ansible. (Hot take: CI is just fancy shell scripting anyway)\nI do not recommend running this code as-is in any important environment. For demonstrative and educational purposes only!\nWriting the command line interface🔗\n\n    \n\nThe command line interface is the foundation that will allow us to package our gRPC server and client into the same binary. We’re going to start our new crate with the CLI first.\n$ cargo new cli-grpc-tonic-blocking\n \tCreated binary (application) `cli-grpc-tonic-blocking` package\n$ cd cli-grpc-tonic-blocking\n\n\nWe will use a crate called StructOpt. StructOpt utilizes the Clap crate which is a powerful command line parser. But Clap can be a little complicated to use, so StructOpt additionally provides a lot of convenient functionality Rust a #[derive] attribute so we don’t have to write as much code.\n$ cargo new cli-grpc-tonic-blocking\n    Created binary (application) `cli-grpc-tonic-blocking` package\n$ cd cli-grpc-tonic-blocking\n\ncargo.toml\n[package]\nname = \"cli-grpc-tonic-blocking\"\nversion = \"0.1.0\"\nauthors = [\"T.J. Telan &lt;t.telan@gmail.com&gt;\"]\nedition = \"2018\n\n[dependencies]\n# CLI\nstructopt = \"0.3\"\n\nIn order to bundle our client and server together, we will want to use our CLI to switch between running as a client or running as a server.\nSome UI design for the CLI🔗\nNote: While we are in development you can use cargo run -- to run our cli binary, and any arguments after the -- is passed as arguments to our binary\nStarting the server🔗\nWhen we start our server, we want to pass in the subcommand server\ncargo run -- server\nOptional arguments for the server🔗\nMost of the time our server will listen to a default address and port, but we want to give the user the option to pick something different.\nWe will provide the option for the server listening address in a flag --server-addr-listen\nUsing the client🔗\nWhen the user runs a command from our client, we want to use the subcommand run. \n$ cargo run -- run\nRequired positional arguments for the client🔗\nAnything after the subcommand run will be the command we pass to the server to execute. A command has an executable name and optionally also arguments.\n$ cargo run -- &lt;executable&gt; [args]\n\nOr to illustrate with how one would use this command w/o cargo if it were named remotecli:\n$ remotecli run &lt;executable&gt; [args]\nOptional arguments for the client🔗\nJust like how our server will have a default listening address and port, our client will assume to connect to the default address. We just want to offer the user the option to connect to a different server.\nWe will provide the option for the server address in a flag --server-addr\nThe CLI code so far🔗\nI’m going to break down the current main.rs into their structs, enums and functions to describe how StructOpt is utilized.\nSkip down to the next section All together if you want to check it out in a single code block.\nIn parts🔗\nApplicationArguments🔗\n// This is the main arguments structure that we'll parse from\n#[derive(StructOpt, Debug)]\n#[structopt(name = \"remotecli\")]\nstruct ApplicationArguments {\n   #[structopt(flatten)]\n   pub subcommand: SubCommand,\n}\n\nLike the comment says, this will be the main struct that you work with to parse args from the user input. \nWe use derive(StructOpt) on this struct to let the compiler know to generate the command line parser.\nThe structopt(name) attribute is reflected in the generated CLI help. Rust will use this name instead of the name of the crate, which again is cli-grpc-tonic-blocking. It is purely cosmetic.\nThe structopt(flatten) attribute is used on the ApplicationArguments struct field. The result effectively replaces this field with the contents of the SubCommand type, which we’ll get to next. \nIf we didn’t use flatten, then the user would need to use the CLI like this:\n$ remotecli subcommand &lt;subcommand&gt; … \n\nBut with the flattening we get a simplified form without the subcommand literal.\n$ remotecli &lt;subcommand&gt; ...\n\nThe reason for this pattern is to allow grouping of the subcommands into a type that we can pattern match on, which is nice for the developer. But at the same time we keep the CLI hierarchy minimal for the user.\nSubCommand🔗\n// These are the only valid values for our subcommands\n#[derive(Debug, StructOpt)]\npub enum SubCommand {\n   /// Start the remote command gRPC server\n   #[structopt(name = \"server\")]\n   StartServer(ServerOptions),\n   /// Send a remote command to the gRPC server\n   #[structopt(setting = structopt::clap::AppSettings::TrailingVarArg)]\n   Run(RemoteCommandOptions),\n}\n\nWe’re working with an enum this time. But again, the most important part is the derive(StructOpt) attribute.\nThe reason to use an enum is to provide some development comfort. Each field in the enum takes in a struct where additional parsing occurs in the event that the subcommand is chosen. But this pattern enables us to not mix that up within this enum and make the code unfocused, and hard to read.\n\nThe second most important detail is to notice the comments with 3 slashes ///.\nThese are doc-comments, and their placement is intentional. Rust will use these comments in the generated help command. The 2 slash comments are notes just for you, the developer, and are not seen by the user.\n\nFor the first subcommand, admittedly I named this field StartServer so I could show off using the structopt(name) attribute.\nWithout the attribute, the user would experience the subcommand transformed by default into the “kebab-case” form start-command. With the name defined on the StartServer field, we tell Rust that we want the user to use server instead.\n(You can configure this behavior with the structopt(rename_all) attribute. I won’t be covering that. Read more about rename_all in the docs)\n\nThe second subcommand Run... you’ll have to forgive my hand waving.\nRemember that StructOpt is built on top of the Clap crate.\nClap is quite flexible, but I thought it was much harder to use. StructOpt offers the ability to pass configuration to Clap and we’re setting a configuration setting w/ respect to the parsing behavior for only this subcommand.\n\nWe want to pass a full command from the client to the server. But we don’t necessarily know how long that command will be and we don’t want the full command to be parsed.\nThe technical description for this kind of CLI parameter is a “Variable-length Argument” or a VarArg in this case. It is a hint for how to parse the last argument so you don’t need to define an end length -- it just trails off.\nWe are configuring the Run subcommand to tell Rust that this uses a VarArg. See the Clap docs for more info about this and other AppSettings.\nServerOptions🔗\n// These are the options used by the `server` subcommand\n#[derive(Debug, StructOpt)]\npub struct ServerOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long, default_value = \"127.0.0.1:50051\")]\n   pub server_listen_addr: String,\n}\n\nOur server subcommand has a single configurable option.\nThe structopt(long) attribute specifies that this is an option that the user will specify with the double-hyphen pattern with the name of the option, which will be in kebab-case by default. Therefore the user would use this as --server-listen-addr.\nstructopt(default_value) is hopefully self-explanatory enough. If the user doesn’t override, the default value will be used. The default value type is a string slice &amp;str, but structopt is converting it into a String by default.\nRemoteCommandOptions🔗\n// These are the options used by the `run` subcommand\n#[derive(Debug, StructOpt)]\npub struct RemoteCommandOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long = \"server\", default_value = \"http://127.0.0.1:50051\")]\n   pub server_addr: String,\n   /// The full command and arguments for the server to execute\n   pub command: Vec&lt;String&gt;,\n}\n\nOur run subcommand has 2 possible arguments.\n\nThe first, server_addr is an optional structopt(long) argument with a default value that aligns with the server default.\nThe second command is a required positional argument. Notice how there is no structopt attribute. The resulting vector from the variable-length argument. The parser splits up spaces per word, and provides them in order within the Vec&lt;String&gt;. (Matched quotes are interpreted as a single word in our situation). \n\nmain()🔗\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let args = ApplicationArguments::from_args();\n\n   match args.subcommand {\n       SubCommand::StartServer(opts) =&gt; {\n           println!(\"Start the server on: {:?}\", opts.server_listen_addr);\n       }\n       SubCommand::Run(rc_opts) =&gt; {\n           println!(\"Run command: '{:?}'\", rc_opts.command);\n       }\n   }\n\n   Ok(())\n}\n\nOur main() is short and focused.\nOur return type is a Result. We return () when things are good, and returns a boxed trait object that implements the std::error::Error trait as our error (the return trait object is boxed, because Rust doesn’t know how much space to allocate).\nWe parse the user input using our StructOpt customized ApplicationArguments struct with from_args(). What’s great is invalid inputs are handled, and so we don’t need to spend any time straying from the happy path.\nAfter the parsing, we need to know what action to take next. We’ll either take a server action, or take a client action.\nWe pattern match on our SubCommand struct, and destructure the enum’s internal structs for the additional arguments.\nWe eventually will call out to the respective server or client to pass along the args. However for now we call println!() to display the values.\nAll together🔗\nmain.rs\nuse structopt::StructOpt;\n\n// These are the options used by the `server` subcommand\n#[derive(Debug, StructOpt)]\npub struct ServerOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long, default_value = \"127.0.0.1:50051\")]\n   pub server_listen_addr: String,\n}\n\n// These are the options used by the `run` subcommand\n#[derive(Debug, StructOpt)]\npub struct RemoteCommandOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long = \"server\", default_value = \"http://127.0.0.1:50051\")]\n   pub server_addr: String,\n   /// The full command and arguments for the server to execute\n   pub command: Vec&lt;String&gt;,\n}\n\n// These are the only valid values for our subcommands\n#[derive(Debug, StructOpt)]\npub enum SubCommand {\n   /// Start the remote command gRPC server\n   #[structopt(name = \"server\")]\n   StartServer(ServerOptions),\n   /// Send a remote command to the gRPC server\n   #[structopt(setting = structopt::clap::AppSettings::TrailingVarArg)]\n   Run(RemoteCommandOptions),\n}\n\n// This is the main arguments structure that we'll parse from\n#[derive(StructOpt, Debug)]\n#[structopt(name = \"remotecli\")]\nstruct ApplicationArguments {\n   #[structopt(flatten)]\n   pub subcommand: SubCommand,\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let args = ApplicationArguments::from_args();\n\n   match args.subcommand {\n       SubCommand::StartServer(opts) =&gt; {\n           println!(\"Start the server on: {:?}\", opts.server_listen_addr);\n       }\n       SubCommand::Run(rc_opts) =&gt; {\n           println!(\"Run command: '{:?}'\", rc_opts.command);\n       }\n   }\n\n   Ok(())\n}\n\nAnd that’s what we’ve done so far. This will be the full extent of the command line parsing functionality for this example, but we’ll revisit the main() function later.\nIf you’re following along, this code works with the cargo.toml provided at the top of this section. Play around using cargo.\nFor example try the following commands:\n\ncargo run --\ncargo run -- server\ncargo run -- server -h\ncargo run -- run\ncargo run -- run ls -al\ncargo run -- run -h\ncargo run -- blahblahblah\n\nProtocol Buffers🔗\n\n    \n\nWhat are Protocol Buffers?🔗\nProtocol Buffers (protobufs) are a way to define a data schema for how your data is structured as well as how to define how programs interface with each other w/ respect to your data in a language-independent manner.\nThis is achieved by writing your data in the protobuf format and compiling it into a supported language of your choice as implemented as gRPC.\nThe result of the compilation generates a lot of boilerplate code.\nNot just data structures with the same shape and naming conventions for your language’s native data types. But also generates the gRPC network code for the client that sends or the server that receives these generated data structures.\n\nFor what it’s worth, an added bonus are servers and clients having the possibility to be  implemented in different languages and inter-operate without issue due to. But we’re going to continue to work entirely in Rust for this example\nWhere should protobuf live in the codebase?🔗\nBefore jumping into the protobuf, I wanted to mention my practice for where to keep the file itself.\n$ tree\n.\n├── Cargo.lock\n├── Cargo.toml\n├── proto\n│   └── cli.proto\n└── src\n\t└── main.rs\n\nI like to keep the protobuf in a directory named proto typically at the same level as the Cargo.toml because as we’ll see soon, the build script will need to reference a path to the protobuf for compilation. The file name itself is arbitrary and naming things is hard so do your best to support your future self with meaningful names.\nThe example protobuf🔗\ncli.proto🔗\nsyntax = \"proto3\";\n\npackage remotecli;\n\n// Command input\nmessage CommandInput {\n string command = 1;\n repeated string args = 2;\n}\n\n// Command output\nmessage CommandOutput {\n string output = 1;\n}\n\n// Service definition\nservice RemoteCLI {\n rpc Shell(CommandInput) returns (CommandOutput);\n}\n\nWe start the file off by declaring the particular version of syntax we’re using. proto3.\n\nWe need to provide a package name.\nThe proto3 docs say this is optional, but our protobuf Rust code generator Prost requires it to be defined for module namespacing and naming the resulting file.\n\nDefined are 2 data structures, called messages.\nThe order of the fields are numbered and are important for identifying fields in the wire protocol when they are serialized/deserialized for gRPC communication.\nThe numbers in the message must be unique and the best practice is to not change the numbers once in use. \nFor more details, read more about Field numbers in the docs.\n\nThe CommandInput message has 2 string fields - one singular and the other repeated. \nThe main executable, which we refer to as command the first word of the user input.\nThe rest of the user input is reserved for args.\nThe separation is meant to provide structure for the way a command interpreter like Bash defines commands.\n\nThe CommandOutput message doesn’t need quite as much structure. After a command is run, the Standard Output will be returned as a single block of text.\n\nFinally, we define a service RemoteCLI with a single endpoint Shell. Shell takes a CommandInput and returns a CommandOutput.\nCompile the protobuf with Tonic🔗\n\n    \n\nNow that we have a protobuf, how do we use it in our Rust program when we need to use the generated code?\nWell, we need to configure the build to compile the protobuf into Rust first.\nThe way we accomplish that is by using a build script (Surprise! Written in Rust) but is compiled and executed before the rest of the compilation occurs.\nCargo will run your build script if you have a file named build.rs in your project root.\n$ tree\n.\n├── build.rs\n├── Cargo.toml\n├── proto\n│   └── cli.proto\n└── src\n\t└── main.rs\nbuild.rs🔗\nfn main() {\n   tonic_build::compile_protos(\"proto/cli.proto\").unwrap();\n}\n\nThe build script is just a small Rust program with a main() function.\nWe’re using tonic_build to compile our proto into Rust. We’ll see more tonic soon for the rest of our gRPC journey.\nBut for now we only need to add this crate into our Cargo.toml as a build dependency.\nCargo.toml🔗\n[package]\nname = \"cli-grpc-tonic-blocking\"\nversion = \"0.1.0\"\nauthors = [\"T.J. Telan &lt;t.telan@gmail.com&gt;\"]\nedition = \"2018\"\n\n[dependencies]\n# CLI\nstructopt = \"0.3\"\n\n[build-dependencies]\n# protobuf-&gt;Rust compiler\ntonic-build = \"0.3.0\"\n\nBuild dependencies are listed under its own section [build-dependencies].  If you didn’t know, your build scripts can only use crates listed in this section, and vice versa with the main package.\nYou can look at the resulting Rust code in your target directory when you cargo build.\nYou’ll have more than one directory with your package name plus extra generated characters due to build script output. So you may need to look through multiple directories.\n$ tree target/debug/build/cli-grpc-tonic-blocking-aa0556a3d0cd89ff/\ntarget/debug/build/cli-grpc-tonic-blocking-aa0556a3d0cd89ff/\n├── invoked.timestamp\n├── out\n│   └── remotecli.rs\n├── output\n├── root-output\n└── stderr\n\nI’ll leave the contents of the generated code to those following along, since there’s a lot of it and the relevant info is either from the proto or will be covered in the server and client implementation.\nThis code will only generate once. Or unless you make changes to build.rs. So if you make changes to your proto and you want to regenerate code, you can force a code regen by using touch.\n$ touch build.rs\n$ cargo build\nServer🔗\nMoving onto writing our server now that we can use the protobuf generated code. We’re going to write the server (and client) in a new module.\n$ tree\n.\n├── build.rs\n├── Cargo.toml\n├── proto\n│   └── cli.proto\n└── src\n\t├── main.rs\n\t└── remotecli\n    \t\t├── mod.rs\n    \t\t└── server.rs\nCargo.toml🔗\n[package]\nname = \"cli-grpc-tonic-blocking\"\nversion = \"0.1.0\"\nauthors = [\"T.J. Telan &lt;t.telan@gmail.com&gt;\"]\nedition = \"2018\"\n\n[dependencies]\n# gRPC server/client\ntonic = \"0.3.0\"\nprost = \"0.6\"\n# CLI\nstructopt = \"0.3\"\n# Async runtime\ntokio = { version = \"0.2\", features = [\"full\"] }\n\n[build-dependencies]\n# protobuf-&gt;Rust compiler\ntonic-build = \"0.3.0\"\n\nThis is the last change we’ll be making to Cargo.toml.\nWe’re adding in tonic and prost as we implement the gRPC server/client. Prost is the implementation of protocol buffers in Rust, and is needed to compile the generated code when we include it into the rest of the package.\nTokio is the async runtime we’re using. The gRPC server/client are async and we will need to adjust our main() to communicate more in the code that we’re now calling async functions..\nremotecli/mod.rs🔗\npub mod server;\n\nTo keep the implementations organized, we’ll separate the server and client code further into their own modules. Starting with the server.\nremotecli/server.rs🔗\nSimilar to the frontend CLI walkthrough, I’ll break this file up into pieces and review them. At the bottom of this file’s section I’ll have the complete file there for copy/paste purposes.\nImports🔗\nuse tonic::{transport::Server, Request, Response, Status};\n\n// Import the generated rust code into module\npub mod remotecli_proto {\n   tonic::include_proto!(\"remotecli\");\n}\n\n// Proto generated server traits\nuse remotecli_proto::remote_cli_server::{RemoteCli, RemoteCliServer};\n\n// Proto message structs\nuse remotecli_proto::{CommandInput, CommandOutput};\n\n// For the server listening address\nuse crate::ServerOptions;\n\n// For executing commands\nuse std::process::{Command, Stdio};\n\nAt the top of the file, we declare a module remotecli_proto that is intended to be scoped only in this file. The name remotecli_proto is arbitrary and for clarity purposes. \nThe tonic::include_proto!() macro effectively copy/pastes our protobuf translated Rust code (as per protobuf package name)  into the module.\n\nThe naming conventions of the protobuf translation can be a little confusing at first, but it is all consistent.\nOur protobuf’s RemoteCLI service generates separate client and server modules using snake case + _server or _client. While generated trait definitions use Pascal case (a specific form of camel case with initial letter capitalized).\nFrom the server specific generated code, we are importing a trait RemoteCli which requires that we implement our gRPC endpoint Shell with the same function signature.\nAdditionally we import RemoteCliServer, a generated server implementation that handles all the gRPC networking semantics but requires that we instantiate with a struct that implements the RemoteCli trait.\n\nThe last import from the gRPC code are our protobuf messages CommandInput and CommandOutput\nFrom our frontend, we are importing the ServerOptions struct, since we are going to pass the user input in for the server listening address.\n\nAt last, we import from std::process. Command and Stdio - for executing commands and capturing output.\nRemoteCli Trait implementation🔗\n#[derive(Default)]\npub struct Cli {}\n\n#[tonic::async_trait]\nimpl RemoteCli for Cli {\n   async fn shell(\n       &amp;self,\n       request: Request&lt;CommandInput&gt;,\n   ) -&gt; Result&lt;Response&lt;CommandOutput&gt;, Status&gt; {\n       let req_command = request.into_inner();\n       let command = req_command.command;\n       let args = req_command.args;\n\n       println!(\"Running command: {:?} - args: {:?}\", &amp;command, &amp;args);\n\n       let process = Command::new(command)\n           .args(args)\n           .stdout(Stdio::piped())\n           .spawn()\n           .expect(\"failed to execute child process\");\n\n       let output = process\n           .wait_with_output()\n           .expect(\"failed to wait on child process\");\n       let output = output.stdout;\n\n       Ok(Response::new(CommandOutput {\n           output: String::from_utf8(output).unwrap(),\n       }))\n   }\n}\n\nWe declare our own struct Cli because we need to impl RemoteCli.\nOur generated code uses an async method. We add #[tonic::async_trait] to our trait impl so the server can use async fn on our method. We just have one method to define, async fn shell().\n\nI’m waving my hands here for the function signature, but the way I initially learned how to write them was to go into the generated code, skimmed the code within the remote_cli_server module and modified the crate paths.\n\nThe first thing we do when we enter shell is peel off the tonic wrapping from request with .into_inner(). We further separate the ownership of data into command and args vars.\nWe build out process as the std::process::Command struct so we can spawn the user’s process and capture stdout.\nThen we wait for process to exit and collect the output with .wait_with_output(). We just want stdout so we further take ownership of just that handle.\n\nLast, we build a tonic::Response, converting the process stdout into a String while we instantiate our CommandOutput. Finally wrapping the Response in a Result and returning it to the client.\nstart_server🔗\npub async fn start_server(opts: ServerOptions) -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let addr = opts.server_listen_addr.parse().unwrap();\n   let cli_server = Cli::default();\n\n   println!(\"RemoteCliServer listening on {}\", addr);\n\n   Server::builder()\n       .add_service(RemoteCliServer::new(cli_server))\n       .serve(addr)\n       .await?;\n\n   Ok(())\n}\n\nThis function will be used by the frontend for the purpose of starting the server.\n\nThe listening address is passed in through opts. It’s passed in as a String, but the compiler figures out what type we mean when we call .parse() due to how we use it later.\n\nWe instantiate cli_server with the Cli struct which we implemented as the protobuf trait RemoteCli. \n\ntonic::Server::builder() creates our gRPC server instance.\nThe .add_service() method takes RemoteCliServer::new(cli_server) to create a gRPC server with our generated endpoints via RemoteCliServer and our trait impl via cli_server.\nThe serve() method takes in our parsed listening address, providing the hint the compiler needed to infer the required type and returns an async Result&amp;lt;&gt;  for us to .await on.\nmain.rs - so far🔗\nWe are making small changes to main.rs to plug in the server module. \npub mod remotecli;\n\nuse structopt::StructOpt;\n\n// These are the options used by the `server` subcommand\n#[derive(Debug, StructOpt)]\npub struct ServerOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long, default_value = \"127.0.0.1:50051\")]\n   pub server_listen_addr: String,\n}\n\n// These are the options used by the `run` subcommand\n#[derive(Debug, StructOpt)]\npub struct RemoteCommandOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long = \"server\", default_value = \"http://127.0.0.1:50051\")]\n   pub server_addr: String,\n   /// The full command and arguments for the server to execute\n   pub command: Vec&lt;String&gt;,\n}\n\n// These are the only valid values for our subcommands\n#[derive(Debug, StructOpt)]\npub enum SubCommand {\n   /// Start the remote command gRPC server\n   #[structopt(name = \"server\")]\n   StartServer(ServerOptions),\n   /// Send a remote command to the gRPC server\n   #[structopt(setting = structopt::clap::AppSettings::TrailingVarArg)]\n   Run(RemoteCommandOptions),\n}\n\n// This is the main arguments structure that we'll parse from\n#[derive(StructOpt, Debug)]\n#[structopt(name = \"remotecli\")]\nstruct ApplicationArguments {\n   #[structopt(flatten)]\n   pub subcommand: SubCommand,\n}\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let args = ApplicationArguments::from_args();\n\n   match args.subcommand {\n       SubCommand::StartServer(opts) =&gt; {\n           println!(\"Start the server on: {:?}\", opts.server_listen_addr);\n           remotecli::server::start_server(opts).await?;\n       }\n       SubCommand::Run(rc_opts) =&gt; {\n           println!(\"Run command: '{:?}'\", rc_opts.command);\n\n\n       }\n   }\n\n   Ok(())\n}\n\nWe now import our remotecli module.\nThe main() function changes slightly as well. First, we change the function to be async.\nWe add the #[tokio::main] attribute to mark the async function for execution.\nAnd we call our new start_server() to actually start a server when the user runs the server subcommand.\nremotecli/server.rs all together🔗\nHere’s the final form of the server module.\nuse tonic::{transport::Server, Request, Response, Status};\n\n// Import the generated rust code into module\npub mod remotecli_proto {\n   tonic::include_proto!(\"remotecli\");\n}\n\n// Proto generated server traits\nuse remotecli_proto::remote_cli_server::{RemoteCli, RemoteCliServer};\n\n// Proto message structs\nuse remotecli_proto::{CommandInput, CommandOutput};\n\n// For the server listening address\nuse crate::ServerOptions;\n\n// For executing commands\nuse std::process::{Command, Stdio};\n\n#[derive(Default)]\npub struct Cli {}\n\n#[tonic::async_trait]\nimpl RemoteCli for Cli {\n   async fn shell(\n       &amp;self,\n       request: Request&lt;CommandInput&gt;,\n   ) -&gt; Result&lt;Response&lt;CommandOutput&gt;, Status&gt; {\n       let req_command = request.into_inner();\n       let command = req_command.command;\n       let args = req_command.args;\n\n       println!(\"Running command: {:?} - args: {:?}\", &amp;command, &amp;args);\n\n       let process = Command::new(command)\n           .args(args)\n           .stdout(Stdio::piped())\n           .spawn()\n           .expect(\"failed to execute child process\");\n\n       let output = process\n           .wait_with_output()\n           .expect(\"failed to wait on child process\");\n       let output = output.stdout;\n\n       Ok(Response::new(CommandOutput {\n           output: String::from_utf8(output).unwrap(),\n       }))\n   }\n}\n\npub async fn start_server(opts: ServerOptions) -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let addr = opts.server_listen_addr.parse().unwrap();\n   let cli_server = Cli::default();\n\n   println!(\"RemoteCliServer listening on {}\", addr);\n\n   Server::builder()\n       .add_service(RemoteCliServer::new(cli_server))\n       .serve(addr)\n       .await?;\n\n   Ok(())\n}\n\nAnd that’s the server implementation and the frontend code for starting the server. It is a surprisingly small amount of code.\nYou can start an instance of the server by running:\n$ cargo run -- server\n[...]\nStart the server on: \"127.0.0.1:50051\"\nRemoteCliServer listening on 127.0.0.1:50051\nClient🔗\nWe’re in the homestretch. Implementing a client. We’re going to create a new module within remotecli called client.rs that will follow the same patterns as we established for the server.\n$ tree\n.\n├── build.rs\n├── Cargo.toml\n├── proto\n│   └── cli.proto\n└── src\n\t├── main.rs\n\t└── remotecli\n    \t\t├── client.rs\n    \t\t├── mod.rs\n    \t\t└── server.rs\nremotecli/mod.rs🔗\npub mod client;\npub mod server;\n\nWe’re declaring the client module within mod.rs \nremotecli/client.rs🔗\nOur client is a lot more straightforward. But splitting the module up into pieces for description purposes. Again, full file is at the end of the secion\nImports🔗\npub mod remotecli_proto {\n   tonic::include_proto!(\"remotecli\");\n}\n\n// Proto generated client\nuse remotecli_proto::remote_cli_client::RemoteCliClient;\n\n// Proto message structs\nuse remotecli_proto::CommandInput;\n\nuse crate::RemoteCommandOptions;\n\nJust like in our server, we create a module remotecli_proto and we use the tonic::include_proto!() macro to copy/paste our generated code into this module.\nWe then include the generated RemoteCliClient to connect, and the CommandInput struct since that is what we send over to the server.\nLast include is the RemoteCommandOptions struct from the frontend so we can pass in the server address we want to connect to.\nclient_run🔗\npub async fn client_run(rc_opts: RemoteCommandOptions) -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   // Connect to server\n   // Use server addr if given, otherwise use default\n   let mut client = RemoteCliClient::connect(rc_opts.server_addr).await?;\n\n   let request = tonic::Request::new(CommandInput {\n       command: rc_opts.command[0].clone().into(),\n       args: rc_opts.command[1..].to_vec(),\n   });\n\n   let response = client.shell(request).await?;\n\n   println!(\"RESPONSE={:?}\", response);\n\n   Ok(())\n}\n\nThe helper function client_run() is an async function like our server. The frontend passes in a RemoteCommandOptions struct for the server address info as well as our raw user command.\n\nFirst thing we do is create client and connect to the server with RemoteCliClient::connect and do an .await.\n\nThen we build our request by creating a tonic::Request struct with our CommandInput.\nThe user command is raw and needs to be sliced up to fit the shape of what the server expects. The first word of the user command is the shell command, and the rest are the arguments.\n\nLastly we use client and call our endpoint with our request and .await for the execution to complete.\nmain.rs🔗\nThis is the final form of main.rs. The last thing we do to main.rs is plug in our client_run() function.\npub mod remotecli;\n\nuse structopt::StructOpt;\n\n// These are the options used by the `server` subcommand\n#[derive(Debug, StructOpt)]\npub struct ServerOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long, default_value = \"127.0.0.1:50051\")]\n   pub server_listen_addr: String,\n}\n\n// These are the options used by the `run` subcommand\n#[derive(Debug, StructOpt)]\npub struct RemoteCommandOptions {\n   /// The address of the server that will run commands.\n   #[structopt(long = \"server\", default_value = \"http://127.0.0.1:50051\")]\n   pub server_addr: String,\n   /// The full command and arguments for the server to execute\n   pub command: Vec&lt;String&gt;,\n}\n\n// These are the only valid values for our subcommands\n#[derive(Debug, StructOpt)]\npub enum SubCommand {\n   /// Start the remote command gRPC server\n   #[structopt(name = \"server\")]\n   StartServer(ServerOptions),\n   /// Send a remote command to the gRPC server\n   #[structopt(setting = structopt::clap::AppSettings::TrailingVarArg)]\n   Run(RemoteCommandOptions),\n}\n\n// This is the main arguments structure that we'll parse from\n#[derive(StructOpt, Debug)]\n#[structopt(name = \"remotecli\")]\nstruct ApplicationArguments {\n   #[structopt(flatten)]\n   pub subcommand: SubCommand,\n}\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let args = ApplicationArguments::from_args();\n\n   match args.subcommand {\n       SubCommand::StartServer(opts) =&gt; {\n           println!(\"Start the server on: {:?}\", opts.server_listen_addr);\n           remotecli::server::start_server(opts).await?;\n       }\n       SubCommand::Run(rc_opts) =&gt; {\n           println!(\"Run command: '{:?}'\", rc_opts.command);\n           remotecli::client::client_run(rc_opts).await?;\n       }\n   }\n\n   Ok(())\n}\nremotecli/client.rs all together🔗\npub mod remotecli_proto {\n   tonic::include_proto!(\"remotecli\");\n}\n\n// Proto generated client\nuse remotecli_proto::remote_cli_client::RemoteCliClient;\n\n// Proto message structs\nuse remotecli_proto::CommandInput;\n\nuse crate::RemoteCommandOptions;\n\npub async fn client_run(rc_opts: RemoteCommandOptions) -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   // Connect to server\n   // Use server addr if given, otherwise use default\n   let mut client = RemoteCliClient::connect(rc_opts.server_addr).await?;\n\n   let request = tonic::Request::new(CommandInput {\n       command: rc_opts.command[0].clone().into(),\n       args: rc_opts.command[1..].to_vec(),\n   });\n\n   let response = client.shell(request).await?;\n\n   println!(\"RESPONSE={:?}\", response);\n\n   Ok(())\n}\nConclusion🔗\nWe just walked through building a CLI application that parses user input and uses gRPC to send a command from a gRPC client to the server for execution and return of command output.\nBased on how we structured the frontend CLI using StructOpt, we allowed both the client and server to compile into a single binary. \nProtocol buffers (or protobufs) were used to define the interfaces of the server and the data structures that were used. The Tonic and Prost crates and Cargo build scripts were used to compile the protobufs into native async Rust code.\nTokio was our async runtime. We experienced how little code was necessary to support async/await patterns.\nI hope that this walkthrough satisfies some curiosity about using gRPC for your backend code. As well as piqued your interest in writing some Rust code.\n","id":"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/","title":"Let’s build a single binary gRPC server-client with Rust in 2020"},"https://tjtelan.com/blog/metawatch-has-arrived/":{"body":"I just got my digital MetaWatch this morning after 3 months of delays from TI.\nI'm still playing around with the watch. Currently just got the Android apk installed on my phone and paired the watch to it. There was no default UI to change the time, I was too lazy to read the user guide, so I really needed to pair to use this as a watch.\nThere will be a more in-depth post soon, but here are a couple of pictures of the watch.\n\n\n","id":"https://tjtelan.com/blog/metawatch-has-arrived/","title":"Metawatch Has Arrived"},"https://tjtelan.com/blog/metawatch-initial-impression/":{"body":"Without further delay, I'd like to post the first of several detailed posts about the new MetaWatch that I received (after a couple announcements of delays) with a pretty brief unboxing post.\n(I clearly already opened it immediately after I got it, but this is how it looked.)\n[Unboxing pics]\nThe next post will be more focused on the watch itself. More pictures too.\nEdit: Removed the links and the unboxing pics. Never got around to finishing the Metawatch first impression posts, but I still have it so I'll obviously be posting on any projects related to it.\n","id":"https://tjtelan.com/blog/metawatch-initial-impression/","title":"MetaWatch - Unboxing"},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"body":"The biggest reason I like using nearlyfreespeech is the ability to prepay my hosting costs. The biggest downside (compared to other hosts) is a lack of straight-forward flexibility for my choice of web development environment. I appreciate the security-focused approach in how they offer features, but I can't say that it is always comfortable as a casual user.\n\nNFS has lots of language support, but non-PHP web development is only supported through CGI)\n\nI've been looking to try out bottle.py (partly because of their routing and partly because Django is not well supported on NFS as of this writing). I did my best to look for some examples online, but came up with only bits and pieces of the solution.\nHere is how the environment was set up on NearlyFreeSpeech.net:\nInstall pip🔗\nI prefer using pip over easy_install, so here's how to install that:\n## Create your local site-packages directory.\n# In NFS's environment, this will end up being /home/private/.local\n$ mkdir -p ~/.local/lib/python2.7/site-packages\n## Automatically add this location to your execution path at login. Just for convenience.\n$ echo 'PATH=~/.local/bin:$PATH' &gt;&gt; ~/.profile\n## Reload your .profile\n$ source ~/.profile\n## Use easy_install to install pip\n$ easy_install --prefix=~/.local pip\n## Now we can use pip to install bottle.py\n$ pip install --user bottle\n\nThis installed bottle.py in /home/private/.local/bin. Just for example\npurposes, I copied this into my site-root so I wouldn't have to play with\npython's sys.path. Use your own judgement.\n$ cp ~/.local/bin/bottle.py /home/public\n\nAt this point, I was able to find a relevant stackoverflow question specifically dealing with bottle.py and cgi.\nThe code is mostly unchanged (I added the shebang at the top), but I'll copy it here for copypasta purposes. Put bottle script and .htaccess in place in your site-root.\n/home/public/index.py🔗\n#!/usr/local/bin/python\n import bottle\n from bottle import route\n\n@route('/')\n def index():\n return 'Index'\n\n@route('/hello')\n def hello():\n return 'Hello'\n\nif __name__ == '__main__':\n from wsgiref.handlers import CGIHandler\n CGIHandler().run(bottle.default_app())\n/home/public/.htaccess🔗\nDirectoryIndex index.py\nRewriteEngine on\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^(.*)$ /index.py/$1 [L]\n\nTest this out by going to http://&lt;domain&gt;/ and http://&lt;domain&gt;/hello to confirm that bottle routes work. This works for me, but it is a little bit slow.\nI'm excited to finally have my own non-php stuff to do on NFS. Hopefully you'll have fun with this as well.\nGood luck.\n","id":"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/","title":"Pip and bottle.py on NearlyFreeSpeech"},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"body":"I published my first public crate. I thought my library was useful, general, and did not have a similar implementation in crates.io. I hoped that it may get used by the Rust community. It turned out to be very easy to package and upload my code, and I wanted to share my process.\nComplete Cargo.toml with package metadata🔗\nhttps://doc.rust-lang.org/cargo/reference/manifest.html#package-metadata\nI tried to define the metadata completely. Other than writing the code, this took the longest time. I wanted to make sure the crate listed in an appropriate category. As well as using relevant keywords.\n(My very first version did not have a README or fancy build badges, but I did have docstrings for docs.rs)\nGenerate API Key and log in from cargo🔗\nCrates.io only supports logging in using Github accounts.\nNavigate to Account Settings and scroll down to the API Access section. Click new token and give your token a name.\nAfter giving your token a name, there is going to be a cargo login command with a random token value. Run this command to log in.\nRun cargo publish🔗\nMy crate was at the top of the new crates column of crates.io\nLike I mentioned earlier, I had doc strings in my code that I expected to publish to docs.rs. This can take a few minutes. Wait a few minutes. It’ll make it there.\nI later followed up with writing a complete README.md, and added badges. That’s all it took to make my little library look fancy.\nIf you were on the fence about publishing to crates.io, I hope you are now convinced that it was not.\n\nBefore you go, some info about my crate:🔗\ngit-url-parse.\nI wrote it because common ssh-based git repo urls don’t fit a standard like:\n\nthe living URL standard\nRFC 1738\nRFC 1808\netc.\n\nAs such, parsing is not supported by many languages’ standard library, including Rust.\nAnyway, I hope you'll check it out! Thanks!\n","id":"https://tjtelan.com/blog/published-first-crate-on-crates-io/","title":"Published First Crate on Crates.io"},"https://tjtelan.com/blog/senior-project-update/":{"body":"Presentations are just around the corner and I haven't been making quite as many updates with regard to my project.\nThe quick summary will have to do for now: It is using an ARM based microcontroller (Freescale Kinetis K60 -- tower system). The function it is serving is web-enabled home automation. I'm using the MQX real-time operating system. Users of this system will control the devices connected to the system through a web browser.\nThe code for this project is up on github, so anyone can contribute, customize for themselves or just look at the code.\nI plan to have a reflection up after next Thursday.\nDeep breath\nStill so much to add.\n","id":"https://tjtelan.com/blog/senior-project-update/","title":"Senior Project Update"},"https://tjtelan.com/blog/status-update/":{"body":"Another Status update post.\nIts been about 3 months since starting my new job. I get to work on a lot of devops-y type of tasks, which is fun, and a much more positive life change.\nQuick rundown on some things I've completed so far, in no order of importance. Possibly future topics🔗\n\nLearn to get used to using OS X as my primary development system\nGet familiar with using Homebrew for installing packages\nPlay with Ansible in an OS X environment\nBeginning to use Chef to manage the team's testing environment.\nLearn about Fluentd, to process development logs (and run arbitrary commands based on events. Lots here to talk about)\nA lot of Docker! Docker-machine, Docker-compose with Virtualbox, then native Docker engine (1.12) in OS X\nSome integrating of Eclipse and Docker via Docker Tooling plugin. (Perhaps more to talk about in the future)\nAWS. Just getting familiar with this environment. Mostly S3, EC2, ECR, CloudFront, so far...\nShippable for CI. (They use containers for building our github check-ins. I think this is an interesting service)\nBlackbox frontend testing with Selenium and Appium\n\nTopics outside of tech I've been spending time doing🔗\n\nWorking on the house (I don't have a functional workshop yet, but soon)\nTime and goal management\nWatching a lot of YouTube\nGetting more involved with many social media type apps\nGardening\nBiking\n\nIt's always been a goal of mine to make this blog something to hold myself accountable. So even if it is a post once in a while, I want to get my voice out there. In an effort to post more often, I'll be experimenting with this space to post non-tech stuff that hopefully brings some value.\n","id":"https://tjtelan.com/blog/status-update/","title":"Status Update"},"https://tjtelan.com/blog/taking-notes/":{"body":"I've carrired a bound, grid paper engineering notebook for quite a few years now. (A habit I picked up in school from the Electrical Engineering side of my formal education.) I've written an entry for (almost) every day working.\nThere are a few reasons why this has been my preference to text-based note taking, for example: a simple text file, or more complex, a wiki\nLow-tech solution for a low-tech problem🔗\nIf I need to write a to-do list, or a reminder for myself while I'm away from my desk, it is a lot easier to jot something down and be done. I don't require to be near a text-editor. I don't need to create a wiki page, or do any post-markup to what I've written.\nAlso, I'm free to use a page however I need to in order to get my thought onto the page. I'm not limited to software features for my visual metaphors if I'm sketching out a diagram, or using common symbols\nThe downsides🔗\nThis approach has bitten me a few times. When I've started in with a new notebook in the middle of a project (since bound books have limited pages) I'm stuck carrying 2 books for a while.\nText searching features don't exist in my books. At least not without scanning and OCR (Making the assumtion that my handwriting is neat enough to be read into a text form, which is an unrealistic assumption.)\nLooking for a balance🔗\nIt got me thinking about what I needed to do if I wanted to go all digital with my note taking, but keep my workflow intact.\nThe feeling of using a softer tip on a phone screen requires too much of a change to how I naturally write. I end up concentrating more just to make sure I write legibly enough for myself. Recently, I bought a hard-tipped stylus for my phone, since my experiences with other rubber tipped styli were underwhelming. An argument can be made about the price for a good styli. The good reviews start at about $20-30. A large commitment for an instrument that is only good on touch screens.\nI use an Android phone, and, at least at the time of this writing, there aren't a lot of great hand writing tools. Most are marketed towards the digital artist. Lots of authoring features I don't need, and some that are missing for creating journal entries.\nFiinote so far has been my favorite. I get a good mix of hand-written options, hand-drawn, text-based. And I can create hyperlinks, and embed images if I choose to. It has only been a few days, but if the free version is this great, the obvious choice may be to support the developers by upgrading to the full version.\nConclusion🔗\nI recommend writing your notes down. There have been many articles and studies about the cognitive advantages of longhand vs keyboarding for note taking.\nHard-tipped styli are pretty great, and cost about as much as nicer ink pens (~$25-100+).\nGood, free software for handwriting exists for handwriting. Great, paid software undoubtedly exists.\nHere's to a successful experiment!\n","id":"https://tjtelan.com/blog/taking-notes/","title":"Taking Notes"},"https://tjtelan.com/blog/tarball-xz/":{"body":"At work I manage a handful of servers running FreeBSD. Today I was writing a little backup script where I wanted the output to be an xz compressed tarball.\nLink to xz Wikipedia article\nArch Linux's packages are delivered as tar.xz, and the compression rate is better than gzip and bzip2.\nI thought this was going to be pretty straightforward, but I was mistaken. Turns out that the BSD tar implementation of tar does not transparently support xz compression in the same way GNU tar implements it. (I'm not saying that it isn't supported, but -z gzip / -j bzip2 / -J xz is easier to remember).\nBeing in a particularly untrusting mood towards tar, I figured I would write a portable one-liner that I could use on work servers and on my workstation.\nHere goes...\ntar -cf - {PATH_TO_ARCHIVE} | xz -2ec &gt; {PATH_TO_SAVE_TARBALL}.tar.xz\n\n[-2ec refers to extreme compression level 2, which works for me in this case. Refer to the xz manpage for more info.]\n","id":"https://tjtelan.com/blog/tarball-xz/","title":"Tarball xz"},"https://tjtelan.com/blog/ubuntu-breakup/":{"body":"Summer means I can experiment with my laptop again!\nSomething I've had on my to-do list for awhile is to try out another Linux distro. In the past I've tried a handful of different ones: starting back in the day with Red Hat, some live usb trials using DSL, Puppy, maintanence with SystemRescueCd and a couple of attempts at learning projects with Backtrack, LFS and DVL, a really serious trial with Gentoo but always giving up and settling with Ubuntu since it just worked.\nHowever, my general usage has changed significantly from when I started using Ubuntu. Also, I noticed that I've just been resisting basically any upgrades to the OS to the point where I've only been running the LTS versions to guarantee that I wouldn't lose hardware and power saving support after an upgrade (probably a little irrational).\nI've been migrating off of the default Ubuntu install for a while now, and I just want a little more control. Starting to sound a little bit like a breakup, but I just want more control while safely distancing myself from Linux beginners.\nI picked Arch because of its similarities to BSD. I manage FreeBSD servers at work, and I think it is really great. Easy to set up, Ports package management system is amazing, knowledgable (yet kind of stiff) community. However, I don't want to run a FreeBSD desktop, no thanks, sorry.\nThe learning curve was not as steep as I anticipated. One of the goals I needed to achieve before allowing myself to have a GUI environment was to learn how to use my wifi card in command line. Done and done. To reward myself, I installed AwesomeWM. I picked this instead of the Xmonad from my previous posts because of the configuration language. I just don't see myself enjoying Haskell over Lua for simple tweaks. If I'm using this computer everyday, I don't want to make it a chore.\nAnyway, I'll probably be checking in with some new stuff soon!\n","id":"https://tjtelan.com/blog/ubuntu-breakup/","title":"Ubuntu Breakup"},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"body":"\nUpdate: 8/19/2020\nIf you're here for gRPC or CLI, this post uses old crates and you should read this post instead.\nI have a new post using more up-to-date Rust with async/await. The new guide uses Tonic for gRPC and StructOpt for CLI. (But no database stuff)\nThis post is still good if you want to see how to use Diesel with PostgreSQL. But if you're here for gRPC, you should check out the new post.\nThanks for listening! Now back to your regularly scheduled program...\n\n\nThis is a summary of my experience with writing a Rust DB-backed server/client with grpc-rs to communicate to the backend, and Diesel as an ORM to be used with PostgreSQL.\nWhat did I want out of this exercise?🔗\nI don't consider myself an expert with Rust, also not a beginner. I've been following the Rust language development for a while. I also have been wanting to move from writing code for personal projects to writing for work projects. \nI have the privilege to choose the tools I want at work, but I must keep in mind that I don't work by myself. I need to be able to provide practical development advice and enough technical mentorship to my teammates to keep us all productive.\nKevin Hoffman’s blog post let me know that what I wanted was possible today in stable (as opposed to nightly). Kevin’s post is great, but I couldn’t really absorb it my first few reads, because he is a more experienced Rust developer than myself. I didn't quite understand the code in his post, and I couldn’t appreciate details he skimmed over which I will point out. I hope that I can provide supplemental details.\nMy target🔗\nI am looking to build a very basic command line interface client, and a backend service. The cli communicates to the backend via gRPC, and the backend connects to a database.\ngRPC\nBased on Kevin Hoffman's experience, and the download activity on crates.io, I also used Pingcap's library grpc-rs. However, while writing this post tower-rs (which is a pure Rust implementation) is considered to be stable, though may not yet implement all features.\nDatabase\nFor database, I decided to use Diesel-rs since there really aren’t any other choices that I felt were better in a production environment. Diesel is a mature project that is very actively supported.\nCommand line interface\nFor the command line interface, I picked clap-rs, because I was interested in trying out defining the command line content and structure with yaml. In the future I would probably use StructOpt. It happens to use clap-rs internally, but the written code is easier for me to read, and in my opinion, less code to write derives. For this reason, I’ll probably gloss over the command line implementation. It provides the minimal amount of interaction I needed to highlight what appears to be an idiomatic pattern. \nAfter spending a few hours with all the tools, I wanted to jump in feet first with an example project.\nMy first attempt figuring out my development pattern🔗\nI briefly considered not telling the parts of the story where I was figuring out how to get everything to compile but here it is. It ended up being a big learning experience. I won't get into super deep detail about my intentions since I ended up not going in this direction. But I will highlight what I learned.\nI focused on individually building with Diesel and gRPC. Once I felt ready to do something productive with these crates, I started thinking about implementation by designing the protocol buffers first, and designing the database later. This ended up being a time-expensive mistake that hopefully will not need to repeated, dear Reader.\nRed flags in the workflow🔗\nI am generating my proto Rust code from .proto using grpc-rs in my build.rs. It runs during cargo build. Based on Diesel's getting started guide, I expected that I would be annotating my proto Rust with the same #[derive()]. \nBut If I'm going to be using the generated structs w/ Diesel, then I have to break up the protobuf compilation w/ some manual step to additionally add in the correct annotations, because the next cargo build regenerated code and removed my manual changes. This was a red flag, but I kept moving forward anyway...\nDiesel also expects that your struct fields are 1:1 with your table schema for to use the custom  #[Derive(Queryable)] for querying the DB. If you haven't looked at grpc-rs generated grpc code, you'll see extra internally used struct fields: unknown_fields and cached_size. These are part of grpc-rs’s implementation of message serialization/deserialization. Moving forward could require representing these extra fields in the database, which has a bad smell and is wasteful of space. \nExample of grpc-rs generated Rust code w/ the special fields\n#[derive(PartialEq,Clone,Default)]\npub struct OrderForm {\n    // message fields\n    pub quantity: i32,\n    pub product: OilProductType,\n    // special fields\n    pub unknown_fields: ::protobuf::UnknownFields,\n    pub cached_size: ::protobuf::CachedSize,\n}\n\n\nChoosing to work directly with this generated struct means manually modifying the list of derive() and working around the special fields unknown_fields and cached_size so Diesel could still be used inserts and queries. Possibly requiring adding columns in the table schema. This is a more tight coupling than I want between my protobuf library and the data in the database.\n\nWhat I should have done🔗\nI only realized this after writing the client/server using the raw proto structs. I then moved onto designing the db schema and migrations. I got stuck trying to flow the grpc client calls to db inserts.\nI concluded that I would need to create new structs that only Diesel would use since their support heavily relies on Derive code. It all felt like an impedance mismatch, and I was having to redo the same work over again without a clear path for where I was going.\nThis was a failure. If I could work backwards from the database inserts to the protos, then this might work out better for my understanding.\nMy second approach🔗\nBefore implementation🔗\nI'm still learning how to write idiomatic Rust. When I got my protos compiling into generated Rust code, and assumed I needed to use it directly because it is native code, despite my unfamiliarity with all of the code generated by Pingcap’s gRPC library.\n\nI’m relying heavily on the use of the Into trait to create a little anti-corruption layer so that the business logic on both my client and my server are not operating directly on the protobuf-generated structs. -- Kevin Hoffman\n\nAfter a not-skimmed reading of Kevin's Hoffman's post, I noticed he described using this same approach in a hand-wavey manner. I wasn't ready to appreciate the warning without some example code or a diagram.\nUse separate structs for business logic🔗\nI hadn’t immediately considered that I might want to write my own structs instead of using the protobuf-generated structs since my mindset was that the generated code would be ergonomic enough to use code.\nHowever, the strategy of using separate structs offers very easy to use conversions because of the From and Into traits. This would be easier for the maintainability and readability of my code because I can contain that conversion logic in away from my business logic.\nI could convert them back and forth between the protobuf-generated forms and the diesel supported forms with .into(). How is this achieved?\nMore on this during implementation...\nWhat is using this pattern like in the code?🔗\nAn example interaction would look like this\nInserts into the database - Client side:\n1. User input \n2. Create Diesel struct + any data manipulation \n3. Convert Diesel struct into Proto struct \n4. Send Proto struct in gRPC call\n\nInserts into the database - Server side:\n1. Receive Proto struct\n2. Convert Proto struct into Diesel struct + Any data manipulation\n3. Insert into DB\nThe Last complicated detail : Rust custom types mapping to Postgres Enums🔗\nI want to use Rust enums and Postgres enums to carry my usage of types all the way to DB insert/query. The diesel schema generator doesn't handle custom postgres enums well, but we can manage the conversion by hand by using a few Diesel Derives: SqlType, FromSql, and ToSql . I might cover using custom postgres types with Diesel in another post. But for now, I am going to hand-wave this detail.\nThe Diesel-rs custom types tests were very useful helping me figure it out.\nOrganizing code into cargo workspaces🔗\nWith some experience under my belt and a better understanding of where relative domains in the code should be separated by crate, I wanted to organize before writing new code. The first thing I did was separate the codebase into workspaces.\nSeparating into different crates would let me organize the struct conversion code from complicating the readability of the business logic code. This will make it easier to reuse patterns between the client and server side through importing the crates.\nImplementation🔗\nWrite database schema🔗\nBecause I need some kind of story to write code against, I decided to write an oil ordering system (because proto-diesel can be described as oil… har har…)\nMy postgres type oil_product has a pie chart of oil derived products that I got from the wiki page of Oil Refinery\nThat helped me with my first thing: I need my database schema - schema.rs\nThen I could write my migrations:\n\nup.sql\ndown.sql\n\nGet inserts into DB working🔗\nSecond is getting inserts into the db working on the backend - Link to specific commit\nbackend.rs\nThis is a simple call from the backend to an internal function that performs the DB insert. After opening a connection, I test create a hardcoded order.\n[...]\nlet conn = client::establish_connection();\nlet new_order = client::create_order(&amp;conn, 1, schema::OilProductEnum::DIESEL);\n[...]\n\ncreate_order\nThis insert only works once because the id is set to 1. But the result is in insert of an order into the database, and returning the inserted Order from the function. \npub fn create_order(conn : &amp;PgConnection, quantity : i32, product_type : OilProductEnum) -&gt; Order {\n    let new_order = vec![\n        Order {\n            id : 1,\n            quantity : quantity,\n            product_type : product_type,\n        },\n    ];\n\n    diesel::insert_into(orders::table)\n        .values(&amp;new_order)\n        .get_result(conn)\n        .expect(\"Error saving new order\")\n}\nCreating user input structs for business logic🔗\nI created some structs solely for taking user input. It will converted to a proto form that will be used for gRPC calls\nThese structs didn't include dynamic info like ids or timestamps, since those are generated right before insert on the server side.\nSeparate proto messages needed to be defined specifically for taking user input from the client-side.\nOne of the business logic structs\npub struct OrderForm {\n    pub quantity : i32,\n    pub product_type : OilProductEnum,\n}\n\nThe corresponding proto message definition\nmessage OrderForm {\n    int32 quantity = 2;\n    OilProductType product = 3;\n}\nConverting business logic struct to/from proto-generated struct🔗\nI implemented the From trait to convert my custom type to protobuf types for the grpc client calls (and vice-versa). The From trait gives us the Into implementation for free.\n// Convert from the protos to our type\nimpl From&lt;refinery::OrderForm&gt; for OrderForm {\n    fn from(proto_form : refinery::OrderForm) -&gt; Self {\n        OrderForm {\n            quantity : proto_form.get_quantity(),\n            product_type : OilProductEnum::from(proto_form.get_product()),\n        }\n    }\n}\n\n// Convert from our type to the proto\nimpl From&lt;OrderForm&gt; for refinery::OrderForm {\n    fn from(rust_form : OrderForm) -&gt; Self {\n        let mut order = refinery::OrderForm::new();\n\n        order.set_quantity(rust_form.quantity);\n        order.set_product(refinery::OilProductType::from(rust_form.product_type));\n        order\n    }\n}\n\nSnippet from convert.rs:\nTake user input before making gRPC call🔗\nWe want to take user input from a client, make a grpc backend call, then insert into the db from the backend.\nWe already have taken care of converting to and from proto forms, so this is focused on control flow now.\nMove inserts into gRPC server endpoint🔗\nInsert will occur after calling into the grpc server endpoint from the client-side.\nOn the client-side, I created a protobuf-generated struct with default values, for demonstrating the gRPC call to the backend works. I can easily take user input afterwards.\nReceive proto struct and convert into DB insertable struct🔗\nLastly, I worked out taking in user input, and using it to instantiate one of my custom types. During the grpc backend call, I call .into() on my type, which will convert to the protobuf form. On the backend, I take in the request, and call .into() to convert back into my type so I can marshal into a diesel insert call.\nServer-side\nI'm converting the proto-form struct req into the business logic form OrderForm by calling .into(). Since the create_order() impl takes in OrderForm, there is no need to annotate the type with .into() and we’re able to stay focused.\n#[derive(Clone)]\nstruct RefineryService;\n\nimpl Refinery for RefineryService {\n    // The client-side converts to refinery::OrderForm while calling this endpoint.\n    // But we convert the proto type back to our custom type right before adding to the database\n    fn order(&amp;mut self, ctx: RpcContext, req: refinery::OrderForm, sink: UnarySink&lt;refinery::OrderStatus&gt;) {\n\n    // Creating the return object\n        let order_status = client::order_received_success();\n\n        let f = sink\n            .success(order_status.clone())\n            .map(move |_| println!(\"Responded with status {{ {:?} }}\", order_status))\n            .map_err(move |err| eprintln!(\"Failed to reply: {:?}\", err));\n\n        let conn = client::establish_connection();\n        // Convert the received proto request into our native type\n        let _new_order = client::create_order(&amp;conn, req.into());\n\n        ctx.spawn(f)\n    }\n}\n\nFunction for creating order\nWe take the business logic form order_form and use it to create the insertable struct new_order with all of the column values for Diesel to execute.\npub fn create_order(conn : &amp;PgConnection, order_form : OrderForm) -&gt; Order {\n    let timestamp = NaiveDateTime::from_timestamp(Utc::now().timestamp(),0);\n\n    let new_order = vec![\n        NewOrder {\n            quantity : order_form.quantity,\n            product_type : order_form.product_type,\n            received_time : timestamp,\n        },\n    ];\n\n    diesel::insert_into(orders::table)\n        .values(&amp;new_order)\n        .get_result(conn)\n        .expect(\"Error saving new order\")\n}\nDo it again, in reverse, for queries🔗\nLast task to cover is repeating all of this work, but for making queries.\nThis ended up being slightly off pattern from implementing From traits, because I am returning a list of Orders, and the From trait apparently is not easily implemented for a Vec to the protobuf Rust equivilent. If I were planning on shipping this code somewhere other than for demonstration, I probably would spend more time implementing From. I ended up getting lazy, and wrapped the manual conversion in a function that loops and uses my already implemented From traits on the Order type. \nuser input side\nThis client subcommand from the cli requests all of the orders from the database, then prints out the protobuf form as a demonstration. The next step would be converting the protobuf list into a Vec of some non-protobuf generated type.\nif let Some(_matches) = matches.subcommand_matches(\"summary\") {\n    let empty_payload = protos::empty::Empty::new();\n\n    // Send the gRPC message\n    let orders = client.get_all_records(&amp;empty_payload).expect(\"RPC Failed!\");\n\n    // Print all records from database\n    println!(\"Order status: {:?}\", orders);\n}\n\nserver endpoint\nThe server takes in an empty proto type, so we don’t have to do any type conversions. We then call a function client::get_all_orders() that calls Diesel to return all the data in a table. Then we make another function call client::db_query_to_proto() to convert our native data into a gRPC sendable form.\nfn get_all_records(&amp;mut self, ctx: RpcContext, _req: protos::empty::Empty, sink: UnarySink&lt;refinery::OrderRecordList&gt;){\n    println!(\"Received request for all of the order records\");\n    let conn = client::establish_connection();\n\n    // Call out to db\n    let query_results = client::get_all_orders(&amp;conn);\n\n    // This conversion pattern is different than the plain `From` traits, because we\n    // have to handle the outer vector in a special way, but I want to be lazy\n    let parsed_query_proto = client::db_query_to_proto(query_results);\n    //println!(\"Got results from the database: {:?}\", query_results);\n\n    let f = sink\n        .success(parsed_query_proto.clone())\n        .map(move |_| println!(\"Responded with list of records {{ {:?} }}\", parsed_query_proto))\n        .map_err(move |err| eprintln!(\"Failed to reply: {:?}\", err));\n\n    ctx.spawn(f)\n}\n\ndatabase query\nThis function queries for everything in the orders table. There's nothing interesting here because Diesel handles everything. I just needed to annotate the type of vector that Diesel was going to return.\n// get_all_orders is used by the backend\npub fn get_all_orders(conn : &amp;PgConnection) -&gt; Vec&lt;Order&gt; {\n    let query : Vec&lt;Order&gt; = orders::table.select(orders::all_columns)\n    .order_by(orders::id)\n    .load(conn)\n    .expect(\"Error getting all order records\");\n    query\n}\n\nquery to protobuf list\nYou don't need to use all of the Rust features all up front or not use Rust at all. We can all hopefully appreciate that this can still be understood.\nI briefly tried to implement From for Vec&lt;Order&gt;, but it became evident that it was going to take a little more effort than I was willing to spend at this moment. I'm first to admit that this is a bit of a hack, but that's fine for demonstration purposes. \nProtobuf's repeated keyword in the Rust code has its own type like Vec&lt;T&gt; called RepeatedField and we are simply looping through and creating a Vec&lt;refinery::OrderRecord&gt; so we could use the conversion impl from_vec. The rest is for building the return data.\n// db_query_to_proto is used by the backend to convert a Vector of Order (from a Diesel select\n// query) into the proto native OrderRecordList. Implementing `From` for a Vector would have taken\n// longer, and used a wrapper type. That very well may be the more maintainable approach, but this\n// was quicker…\n\npub fn db_query_to_proto(rust_record : Vec&lt;Order&gt;) -&gt; refinery::OrderRecordList {\n    let mut proto_vec : Vec&lt;refinery::OrderRecord&gt; = Vec::new();\n\n    // Let's take advantage of the `From` trait\n    for r in rust_record {\n        proto_vec.push(refinery::OrderRecord::from(r));\n    }\n\n    let proto_order = protobuf::RepeatedField::from_vec(proto_vec);\n\n    let mut proto_final = refinery::OrderRecordList::new();\n    proto_final.set_order(proto_order);\n    proto_final\n}\nIn conclusion🔗\nRust library support for gRPC is here. ORM support with Diesel-rs has been here for a while. But if you want to use gRPC and Diesel in the same project, maybe you can learn from my experience and be productive.\nDo not primarily use the protobuf generated Rust types throughout your codebase. Especially if you plan on using Diesel-rs to deal with database inserts/queries, because structs need to be 1:1 with your table schema for the smoothest experience using Diesel-rs.\nImplement the From/Into traits to more effectively convert between business logic structs and your protobuf generated Rust structs.\nConvert to the proto Rust types only to send/return data over gRPC calls and then immediately convert back to your business logic type on the receiving end.\nYou don't need to write perfect Rust code in one go.\n\nThe code used throughout this post is located here.\n","id":"https://tjtelan.com/blog/using-a-database-grpc-with-rust/","title":"Using a database + gRPC with Rust"},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"body":"An impromptu reformat of my Windows 7 machine quickly had me frustrated with Virtualbox reconfiguration. It had been so long since I had originally done it, and I had forgotten to document the nuances of that setup. So here goes:\nPurpose🔗\nThis specific VM configuration is FreeBSD 8.2 w/ ZFS on root. I don't have the time to set it up from scratch, but I'm currently using the newest ZFS version available on this site (v28, special edition).\nI'm only planning on using this VM for SSH for a persistent irc connection. I also want this to start automatically at Win7's boot.\nInstall VM🔗\nSo after installing FreeBSD and ports and of course, remembering to ENABLE SSH... I had to test the ssh connection.\n(Remember to open the ports on the host side. I'm not going to walk you through that step.)\nHeadless VM🔗\nNow for the headless start.\nI tried creating a .bat file that used VBoxHeadless. This let it start at boot, but it left an annoying cmd.exe window open.\nApparently a common issue. A common solution I used was to create a .vbs script to run the .bat file. This was both annoying and tedious but effective. Startup at boot and no lingering cmd.exe window.\nHere are the contents of my .bat and .vbs files. I placed these in the same directory, and made a shortcut in the Start &gt; All Programs &gt; Startup to the .vbs file.\nstartfreebsdvm.bat🔗\nD:\\\"Program Files\"OracleVirtualBoxVBoxHeadless.exe -s FreeBSD startvm-headless.vbs\nSet WshShell = WScript.CreateObject(\"WScript.Shell\")\nobj = WshShell.Run(\"D:Users[username]startfreebsdvm.bat\", 0)\nset WshShell = Nothing\n","id":"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/","title":"Virtualbox Headless-mode on Windows 7"},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"body":"I recently completed my first coding streaming session. A few people watched for a few minutes, so I considered it to be a success. I used what I already had on hand, did not spend any money and I was able to stream for about 3 hours from zero code to a small completed project. There is much room for improvement, but I want to share what I used to get started. \nMy motivation for streaming my coding sessions is to improve my communication skills, as well as educate and demonstrate to others about being productive with programming languages and tech that I like using.\nMy streaming setup🔗\nI’m running Linux on my System76 Gazelle laptop. My distro is Manjaro 20 (KDE Plasma).\nThe following are the hardware + software I already had\n\nLaptop webcam\nCondenser microphone (I use a Behringer C-1U)\nAdjustable mic stand\nExternal Monitor\nExternal keyboard\nExternal mouse\nStreaming software (I used OBS. More on that later)\nText editor (I used VSCode)\nTerminal (I used Alacritty + the built-in terminal in VSCode)\nWeb browser\n\n\n    \n        \n        My extra basic streaming setup. Don't spend big money before you even have momentum.\n    \n\nSet accurate expectations for yourself and potential viewers🔗\nI watched a few coding streams from people that I see in the space regularly prior to running my own. I didn't want to reinvent the wheel, and so I had to experience what works for others and identify anything that is common. Pretty much no one is doing anything wholly unique, so I decided I would learn by copying what works for other coding streamers.\nCreate loose structure to guide you🔗\nWrite your title with intention🔗\nUnless you have an existing community, try to avoid low-value clickbait.\nAs a lowly unknown I need to bring a simple, but descriptive stream title. \nI want people to know:\n\nWhat language I'm writing in.\nWhat fancy technology I plan to use, if any.\nSuccinct objective (Emphasis on singular!)\n\nSomething to keep in mind: Titles get truncated at about 40 or so characters. After that, viewers will have to put in some effort to mouse over your title to read past the cut.\n\nThe title I settled on?\n[Rust] GRPC Remote Command Line using Tonic + CLAP - Writing a blog post\n\nAdd a description and have a plan🔗\nMost of the streamers have some narrow theme for their time online in order to set expectations for people watching.\nExplicitly let your viewers know what they are going to see in your description so they can decide if they will stick around. Otherwise you'll either get asked the same questions or people will just bounce out with disinterest.\n\nSpecific to my first stream:\nI wanted to dedicate time to writing the example Rust code for another blog post I have in progress.\nWith that in mind:\nDescription\n\nPrimary goal is to write a small CLI driven gRPC server/client in Rust\nSecondary goal is to document my process including looking up documentation and testing.\n\nPlan\n\nIn my notes, I broke down the domains of the application into ordered objectives I could follow.\nI would take on each domain one at a time with the intention of connecting each of them together as each section became stable enough to test with user input.\n\n\nTechnical preparation🔗\nSince I didn’t want to worry about getting everything perfect I narrowed my focus on a few details and personal preferences about the stream.\n\nNot streaming my entire desktop, instead individual windows.\n\n(I thought this would be easier for viewers.)\n\n\nIncluding a background for the negative space\nSmall on-screen banner that includes links to my other online platforms\n\nMinor self-promotion\n\n\nMicrophone only, no external music\nWebcam placement as close to level to or pointing down on my face\n\nSo people wouldn't have to look up my nose\n\n\n\nI didn't worry about having chat visible but I did have it open for me to interact with just in case.\nSet up streaming software🔗\nTwitch has a list of recommended software for broadcasting. I ended up using Open Broadcaster Software, more commonly known as OBS because it has support for Linux.\n\n    \n        \n        Open Broadcaster Software a.k.a OBS\n    \n\nI’m not going to go over the deep details of OBS, but I encourage looking for tutorials on Youtube. Even in 2020, the beginner OBS tutorials from a few years ago are still relevant and usable. They helped make using OBS a lot less intimidating.\nEnable the preview and prepare to spend a little bit of time in OBS. What you see in the preview is what will get streamed out. Start simple. One Scene, and start with one source and add in sources as you get more familiar.\nQuick start guide to Sources🔗\nHere’s a short list of sources you may want to add from a Linux desktop into OBS and what they translate to to usable in OBS.\nDescription of inputOBS sourceNotes\nEntire desktopScreen Capture (XSHM)If you have multiple monitors, you will need to select the screen you want to display\nSpecific windowWindow Capture (XComposite)You’ll need to select the window you want displayed. One source per window\nImageImageTested w/ JPEG, PNG\nWebcamVideo Capture Device (V4L2)You’ll need to select your webcam from Devices if you have multiple cameras attached\nCapture CardVideo Capture Device (V4L2)Similar to webcam, you’ll need to select your capture card device. Especially if you also have a webcam attached to your computer\nMicrophone- Audio Capture Device (ALSA)- Audio Capture Input (PulseAudio)It might be easier to configure audio through: Settings &gt; Audio &gt; Devices  Especially if you want to disable sources\nDesktop audio- Audio Capture Device (ALSA)- Audio Capture Input (PulseAudio)(See notes for microphone)\n\nThis may slightly differ from what the official OBS Sources guide documents, but if you’re choosing to use Linux to stream then you probably already expect this. \n\n    \n        \n        What OBS sources look like in Linux\n    \n\nThe Sources &gt; Add drop-down menu has icons that give good hints for what they do. Your results may vary, so be prepared to play around with settings. (But you already know that if you're insisting on using Linux...)\nWorkarounds for blacked out screens using laptop hybrid GPU setups🔗\nOne issue I ran into while writing his guide was being unable to use a single window as a streaming source. Adding the source resulted in a window that was blacked out, but my mouse cursor was still visible when over the window.\n\n    \n        \n        VSCode's window is blacked out in OBS, but my cursor is still visible...\n    \n\nTo work around, you can pick one of the following solutions:\n\nForce OBS and all your windows to run on the same GPU. Some software such as web browsers or IDEs use hardware acceleration by default. You can enable/disable accordingly to match OBS.\nOr you can restart your laptop in either integrated or GPU mode (i.e., not hybrid mode)\n\nThe reason is due to how hybrid GPU works. OBS and the window I was trying to display were running on different gpus. \nFor more information please read this thread from the OBS Project forums.\nConfiguring API keys for streaming🔗\n\n    \n        \n        OBS stream key settings\n    \n\nThe location for where you add in your service stream key is very easy to navigate to:\nSettings &gt; Stream\nSelect the service you want to stream to, and enter the Stream Key.\nThere are many preconfigured services in OBS, so you’ll probably only need to provide your stream key and not the service URL.\nCommon links to where you can get your stream key:\n\nYoutube\n\nhttps://www.youtube.com/live_dashboard\nStream name/key is at the button of the page\n\n\nTwitch\n\nhttps://www.twitch.tv/settings/profile -- Then click Channels and Videos\nOr: https://dashboard.twitch.tv/u/&lt;your-twitch-username&gt;/settings/channel\nPrimary Stream Key is listed at the top of the page\n\n\n\n(I use a service called Restream which is supported by OBS. Restream will broadcast to multiple services at the same time. I use it to broadcast to YouTube and Twitch simultaneously.)\nDon’t overthink and start streaming🔗\n\n    \n        \n        Don't worry about perfection. Just take the first step and start.\n    \n\nThe first thing I noticed after going live was that the platforms I was broadcasting to had some noticeable lag between my actions and seeing it live in the browser.\nWhen you first get started, you probably won’t have a lot of people watching. This will be a good thing because you’re going to notice many details you’ll want to improve. \nI'm saying this to myself for the benefit of anyone else who got this far:\nIt will take time, effort and consistency on your part before you see results. So relax, try to have fun and enjoy the process.\n\nIf you made this far, thanks!\nPlease check me out on my Twitch channel. I stream weekly coding sessions about using Rust and DevOps topics. I hope you'll considering following me!\n","id":"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/","title":"What I learned running a live programming Twitch stream from Linux"},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"body":"Beginning of the quarter is tomorrow, and I'm trying to accept that I will be spending more time on a Windows workstation to access the software I'm using for my senior project (more on that soon).\nThere are a few comforts that I am still missing in Win7 that I'm trying to solve with Cygwin, like Improving Cygwin in Windows with Rxvt getting zsh back.\nToday, that issue was being able to write Zsh scripts that would run at login through Cygwin instead of using cmd.exe.\nTurned out to not be quite as straightforward as I had hoped, but still easy.\nAdd Cygwin to Win7 PATH environment variable.🔗\nIt took me a moment to find this information after having trouble using ls in my script. Although, echo worked...\nAnyway, might as well add this first and avoid the issues entirely.\n\nOpen start menu\nRight-click Computer\nClick Properties\nClick Advanced system settings\n\nIn the new System Properties window, click the Environment Variables button located at the bottom.\nIn the new Environment Variables window, at the bottom are the System variables\nAdd CYGWIN_HOME with a value of the Cygwin installation path (default is C:/cygwin) if it does not exist in the variable list.\nEdit the PATH variable to include %CYGWIN_HOME%/bin which is the same as\nincluding /bin in the Cygwin environment.\nRun Cygwin scripts from Windows🔗\nYou can't just write the script and use Zsh built-ins in Windows space. You have to write the script in Zsh space and have windows have Zsh run that script. Simple. Right?\nI'll just show my test scripts:\n(On the Windows desktop)\ntestscript.bat\nzsh.exe /home/[username]/test.sh\n\n(In Cygwin)\ntest.sh\n#!/usr/bin/env zsh\necho `pwd`\necho Test\necho `ls /home/[username]`\n\nThese are the results of running testscript.bat in cmd.exe\n/cygdrive/d/Users/[username]/Desktop\nTest\ntest.sh\n","id":"https://tjtelan.com/blog/zsh-at-win-7-start-up/","title":"Zsh at Win 7 Start up"},"https://tjtelan.com/now/":{"body":"In my newest post I shared that I started streaming coding sessions on twitch. I've done two sessions. The first was quite successful, and the second was a relative failure...\nBut I will keep trying! I don't have much to lose other than my comfort of doing what is familiar. I have much more to gain from the experience risking looking a little stupid by doing something new.\n","id":"https://tjtelan.com/now/","title":"Intentionally uncomfortable. But trying new things!"}},"docInfo":{"https://tjtelan.com/":{"body":5,"title":0},"https://tjtelan.com/about/":{"body":50,"title":0},"https://tjtelan.com/blog/":{"body":0,"title":1},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-1/":{"body":536,"title":6},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-2/":{"body":823,"title":6},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-3/":{"body":488,"title":6},"https://tjtelan.com/blog/building-a-unix-shell-in-rust-part-4/":{"body":421,"title":6},"https://tjtelan.com/blog/cygwin-screen-reattach-workaround/":{"body":87,"title":4},"https://tjtelan.com/blog/deploy-postfix-gmail-relay-with-ansible/":{"body":333,"title":7},"https://tjtelan.com/blog/github-actions-push-vs-pr-workflow/":{"body":445,"title":6},"https://tjtelan.com/blog/gnome-xmonad-lucid/":{"body":61,"title":3},"https://tjtelan.com/blog/goodbye-wordpress/":{"body":30,"title":2},"https://tjtelan.com/blog/how-to-link-multiple-docker-compose-via-network/":{"body":585,"title":7},"https://tjtelan.com/blog/improving-cygwin-in-windows-with-rxvt/":{"body":213,"title":4},"https://tjtelan.com/blog/laptop-volume-buttons-in-awesome-wm/":{"body":173,"title":4},"https://tjtelan.com/blog/learning-android-to-play-with-metawatch-manager/":{"body":110,"title":5},"https://tjtelan.com/blog/learning-new-build-systems/":{"body":109,"title":4},"https://tjtelan.com/blog/lets-build-a-single-binary-grpc-server-client-with-rust-in-2020/":{"body":3027,"title":9},"https://tjtelan.com/blog/metawatch-has-arrived/":{"body":40,"title":2},"https://tjtelan.com/blog/metawatch-initial-impression/":{"body":52,"title":2},"https://tjtelan.com/blog/pip-and-bottle-py-on-nearlyfreespeech/":{"body":227,"title":3},"https://tjtelan.com/blog/published-first-crate-on-crates-io/":{"body":185,"title":4},"https://tjtelan.com/blog/senior-project-update/":{"body":64,"title":3},"https://tjtelan.com/blog/status-update/":{"body":178,"title":2},"https://tjtelan.com/blog/taking-notes/":{"body":288,"title":2},"https://tjtelan.com/blog/tarball-xz/":{"body":99,"title":2},"https://tjtelan.com/blog/ubuntu-breakup/":{"body":188,"title":2},"https://tjtelan.com/blog/using-a-database-grpc-with-rust/":{"body":1744,"title":4},"https://tjtelan.com/blog/virtualbox-headless-mode-on-windows-7/":{"body":150,"title":5},"https://tjtelan.com/blog/what-i-learned-running-a-live-programming-stream-from-linux/":{"body":851,"title":7},"https://tjtelan.com/blog/zsh-at-win-7-start-up/":{"body":180,"title":5},"https://tjtelan.com/now/":{"body":37,"title":5}},"length":32},"lang":"English"};